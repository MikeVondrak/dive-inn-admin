@use "sass:map";
@use '../../scss/utility';

@mixin FlexCenter {
  display: flex;
  justify-content: center;
  align-items: center;
}
@mixin DiagonalCorner {
  background: transparent;
  border-top: $cornerButtonSize solid transparent;
  border-right: $cornerButtonSize solid transparent;
  border-bottom: $cornerButtonSize solid utility.$dive-black;
  border-left: $cornerButtonSize solid utility.$dive-black;
}
@mixin ArrowLeft {
  border-top: $backBtnSize solid transparent;
  border-bottom: $backBtnSize solid transparent;
  border-right: $backBtnSize + 0.35vw solid utility.$dive-red;
}

$cardWidths: ('zero': 90vw, 'xs': 70vw, 'sm': 28vw, 'md': 28vw, 'lg': 24vw);
$cardMaxWidth: 30rem;
$cardHeights: ('zero': 14vw, 'md': 19.5vw, 'lg': 17vw);
$imgSizes: ('zero': 8.5vw, 'md': 7.5vw, 'lg': 6.5vw);
$fontPrimarySizes: ('zero': 4.5vw, 'md': 2.75vw, 'lg': 2.25vw);
$fontSecondarySizes: ('zero': 3.5vw, 'md': 2vw, 'lg': 1.5vw);

// $cardWidth: 28vw;
// $cardWidthLg: 24vw;
// $cardHeight: 19.5vw;
// $cardHeightLg: 17vw;
// $imgSize: 7.5vw;
// $imgSizeLg: 6.5vw;

$cornerButtonSize: 1vw;
// $fontSize: 2.0vw;
// $fontSize2: 2.75vw;
// $fontSizeLg: 1.5vw;
// $fontSize2Lg: 2.25vw;
$backBtnSize: 0.35vw;

:host {
  display: block;

  .card-container {    
    display: flex;
    flex-direction: row;
    margin: 0;
    //gap: 4vw; // only flex up to sm size
    font-size: 1.65rem;
    perspective: 1000px;
    cursor: pointer;
    
    .card-content {
      position: relative;
      width: map.get($cardWidths, 'zero');
      height: map.get($cardHeights, 'zero');
      max-width: $cardMaxWidth;
      transform-style: preserve-3d;
      transform: rotateY(0deg);      
      border-radius: 1rem;
      background-color: utility.$dive-red;
      transition: box-shadow 0.25s ease;
      
      box-shadow: 1px 1px 4px 0px utility.$dive-black;
      &:hover {
        box-shadow: 3px 3px 6px 0px utility.$dive-black;
      }
      &:active {
        box-shadow: 0px 0px 2px 0px utility.$dive-black;
      }

      > div {
        position: absolute;
        width: 100%;
        height: 100%;        
        @include FlexCenter();
        backface-visibility: hidden;
        border-radius: 1rem;

        &.card-face {
        }
        &.card-back {
          transform: rotateY(180deg);
          background-color: utility.$dive-black;
          overflow: hidden;

          .corner-button {
            z-index: 1;
            position: absolute;
            bottom: -0.1vw;
            left: -0.1vw;
            @include DiagonalCorner();
            cursor: pointer;
            > div {
              z-index: 2;
              position: absolute;
              top: 0.5vw;
              left: -1.25vw;
              
              @include ArrowLeft();
            }
          }
        }
      }

      .icon-container {
        position: absolute;
        left: 2vw;
        @include FlexCenter();
        height: 100%;


        svg {
          display: block;
          max-width: map.get($imgSizes, 'zero');
          max-height: map.get($imgSizes, 'zero');
        }
        > div {
        }
      }

      .text-container {
        width: 100%;
        margin-right: 1vw;
        text-shadow: 1px 1px 2px utility.$dive-black;

        font-size: map.get($fontSecondarySizes, 'zero');
        white-space: nowrap;

        .large {
          font-size: map.get($fontPrimarySizes, 'zero');
        }

        .center {
          @include FlexCenter();
          flex-direction: column;
          text-align: center;
        }
      }
    }
    @include utility.media-breakpoint-gte(xs) {
      .card-content {
        width: 70vw;
      }
    }

    @include utility.media-breakpoint-gte(sm) {
      .card-content {
        > div {
          flex-direction: column;
        }
      }
    }

    @include utility.media-breakpoint-gte(md) {
      display: block;
      .card-content {
        .icon-container {
          
        }
        .text-container {
          @include FlexCenter;
          margin: 0;
          flex-direction: column;

          .large {
          }
        }
      }
    }

    @include utility.media-breakpoint-gte(lg) {
      .card-content {
        width: map.get($cardWidths, 'lg');
        height: map.get($cardHeights, 'lg');

        .icon-container {
          svg {
            max-width: map.get($imgSizes, 'lg');
            max-height: map.get($imgSizes, 'lg');
          }
        }
        
        .text-container {
          @include FlexCenter;
          margin: 0;
          flex-direction: column;
          font-size: map.get($fontSecondarySizes, 'lg');

          .large {
            font-size: map.get($fontPrimarySizes, 'lg');
          }
        }
      }
    }
  }

}