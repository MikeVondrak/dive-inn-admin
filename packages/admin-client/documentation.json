{
    "pipes": [],
    "interfaces": [
        {
            "name": "PossibleTypesResultData",
            "id": "interface-PossibleTypesResultData-2c61f8d6cb2aeaab2e9b2c1bc137a91e9508bdc2363c4702033fa3e7e75b15db64afd1a6f81836ac2d44c4e19a387b344b26c600007db709c36efecd2f9928a1",
            "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nimport { GeneratedModule } from '../generated.module';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  float8: any;\n};\n\n/** Boolean expression to compare columns of type \"Boolean\". All fields are combined with logical 'AND'. */\nexport type Boolean_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Boolean']>;\n  _gt?: InputMaybe<Scalars['Boolean']>;\n  _gte?: InputMaybe<Scalars['Boolean']>;\n  _in?: InputMaybe<Array<Scalars['Boolean']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['Boolean']>;\n  _lte?: InputMaybe<Scalars['Boolean']>;\n  _neq?: InputMaybe<Scalars['Boolean']>;\n  _nin?: InputMaybe<Array<Scalars['Boolean']>>;\n};\n\n/** Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'. */\nexport type Int_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Int']>;\n  _gt?: InputMaybe<Scalars['Int']>;\n  _gte?: InputMaybe<Scalars['Int']>;\n  _in?: InputMaybe<Array<Scalars['Int']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['Int']>;\n  _lte?: InputMaybe<Scalars['Int']>;\n  _neq?: InputMaybe<Scalars['Int']>;\n  _nin?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'. */\nexport type String_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['String']>;\n  _gt?: InputMaybe<Scalars['String']>;\n  _gte?: InputMaybe<Scalars['String']>;\n  /** does the column match the given case-insensitive pattern */\n  _ilike?: InputMaybe<Scalars['String']>;\n  _in?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column match the given POSIX regular expression, case insensitive */\n  _iregex?: InputMaybe<Scalars['String']>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  /** does the column match the given pattern */\n  _like?: InputMaybe<Scalars['String']>;\n  _lt?: InputMaybe<Scalars['String']>;\n  _lte?: InputMaybe<Scalars['String']>;\n  _neq?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given case-insensitive pattern */\n  _nilike?: InputMaybe<Scalars['String']>;\n  _nin?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column NOT match the given POSIX regular expression, case insensitive */\n  _niregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given pattern */\n  _nlike?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given POSIX regular expression, case sensitive */\n  _nregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given SQL regular expression */\n  _nsimilar?: InputMaybe<Scalars['String']>;\n  /** does the column match the given POSIX regular expression, case sensitive */\n  _regex?: InputMaybe<Scalars['String']>;\n  /** does the column match the given SQL regular expression */\n  _similar?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type Album = {\n  __typename?: 'album';\n  /** An array relationship */\n  album_location_album: Array<Album_Location>;\n  /** An aggregate relationship */\n  album_location_album_aggregate: Album_Location_Aggregate;\n  album_location_id: Scalars['Int'];\n  description: Scalars['String'];\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num: Scalars['float8'];\n  id: Scalars['Int'];\n  title: Scalars['String'];\n};\n\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type AlbumAlbum_Location_AlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type AlbumAlbum_Location_Album_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n/** aggregated selection of \"album\" */\nexport type Album_Aggregate = {\n  __typename?: 'album_aggregate';\n  aggregate?: Maybe<Album_Aggregate_Fields>;\n  nodes: Array<Album>;\n};\n\n/** aggregate fields of \"album\" */\nexport type Album_Aggregate_Fields = {\n  __typename?: 'album_aggregate_fields';\n  avg?: Maybe<Album_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Album_Max_Fields>;\n  min?: Maybe<Album_Min_Fields>;\n  stddev?: Maybe<Album_Stddev_Fields>;\n  stddev_pop?: Maybe<Album_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Album_Stddev_Samp_Fields>;\n  sum?: Maybe<Album_Sum_Fields>;\n  var_pop?: Maybe<Album_Var_Pop_Fields>;\n  var_samp?: Maybe<Album_Var_Samp_Fields>;\n  variance?: Maybe<Album_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"album\" */\nexport type Album_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Album_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"album\" */\nexport type Album_Aggregate_Order_By = {\n  avg?: InputMaybe<Album_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Album_Max_Order_By>;\n  min?: InputMaybe<Album_Min_Order_By>;\n  stddev?: InputMaybe<Album_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Album_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Album_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Album_Sum_Order_By>;\n  var_pop?: InputMaybe<Album_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Album_Var_Samp_Order_By>;\n  variance?: InputMaybe<Album_Variance_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"album\" */\nexport type Album_Arr_Rel_Insert_Input = {\n  data: Array<Album_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n/** aggregate avg on columns */\nexport type Album_Avg_Fields = {\n  __typename?: 'album_avg_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"album\" */\nexport type Album_Avg_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"album\". All fields are combined with a logical 'AND'. */\nexport type Album_Bool_Exp = {\n  _and?: InputMaybe<Array<Album_Bool_Exp>>;\n  _not?: InputMaybe<Album_Bool_Exp>;\n  _or?: InputMaybe<Array<Album_Bool_Exp>>;\n  album_location_album?: InputMaybe<Album_Location_Bool_Exp>;\n  album_location_id?: InputMaybe<Int_Comparison_Exp>;\n  description?: InputMaybe<String_Comparison_Exp>;\n  flickr_photo_set_id?: InputMaybe<String_Comparison_Exp>;\n  flickr_photo_set_id_num?: InputMaybe<Float8_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  title?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"album\" */\nexport enum Album_Constraint {\n  /** unique or primary key constraint */\n  AlbumPkey = 'album_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"album\" */\nexport type Album_Inc_Input = {\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"album\" */\nexport type Album_Insert_Input = {\n  album_location_album?: InputMaybe<Album_Location_Arr_Rel_Insert_Input>;\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_Location = {\n  __typename?: 'album_location';\n  /** An array relationship */\n  albums: Array<Album>;\n  /** An aggregate relationship */\n  albums_aggregate: Album_Aggregate;\n  description: Scalars['String'];\n  id: Scalars['Int'];\n  modified?: Maybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n};\n\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_LocationAlbumsArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_LocationAlbums_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n/** aggregated selection of \"album_location\" */\nexport type Album_Location_Aggregate = {\n  __typename?: 'album_location_aggregate';\n  aggregate?: Maybe<Album_Location_Aggregate_Fields>;\n  nodes: Array<Album_Location>;\n};\n\n/** aggregate fields of \"album_location\" */\nexport type Album_Location_Aggregate_Fields = {\n  __typename?: 'album_location_aggregate_fields';\n  avg?: Maybe<Album_Location_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Album_Location_Max_Fields>;\n  min?: Maybe<Album_Location_Min_Fields>;\n  stddev?: Maybe<Album_Location_Stddev_Fields>;\n  stddev_pop?: Maybe<Album_Location_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Album_Location_Stddev_Samp_Fields>;\n  sum?: Maybe<Album_Location_Sum_Fields>;\n  var_pop?: Maybe<Album_Location_Var_Pop_Fields>;\n  var_samp?: Maybe<Album_Location_Var_Samp_Fields>;\n  variance?: Maybe<Album_Location_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"album_location\" */\nexport type Album_Location_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Album_Location_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"album_location\" */\nexport type Album_Location_Aggregate_Order_By = {\n  avg?: InputMaybe<Album_Location_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Album_Location_Max_Order_By>;\n  min?: InputMaybe<Album_Location_Min_Order_By>;\n  stddev?: InputMaybe<Album_Location_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Album_Location_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Album_Location_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Album_Location_Sum_Order_By>;\n  var_pop?: InputMaybe<Album_Location_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Album_Location_Var_Samp_Order_By>;\n  variance?: InputMaybe<Album_Location_Variance_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"album_location\" */\nexport type Album_Location_Arr_Rel_Insert_Input = {\n  data: Array<Album_Location_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n/** aggregate avg on columns */\nexport type Album_Location_Avg_Fields = {\n  __typename?: 'album_location_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"album_location\" */\nexport type Album_Location_Avg_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"album_location\". All fields are combined with a logical 'AND'. */\nexport type Album_Location_Bool_Exp = {\n  _and?: InputMaybe<Array<Album_Location_Bool_Exp>>;\n  _not?: InputMaybe<Album_Location_Bool_Exp>;\n  _or?: InputMaybe<Array<Album_Location_Bool_Exp>>;\n  albums?: InputMaybe<Album_Bool_Exp>;\n  description?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"album_location\" */\nexport enum Album_Location_Constraint {\n  /** unique or primary key constraint */\n  AlbumLocationPkey = 'album_location_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"album_location\" */\nexport type Album_Location_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"album_location\" */\nexport type Album_Location_Insert_Input = {\n  albums?: InputMaybe<Album_Arr_Rel_Insert_Input>;\n  description?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Album_Location_Max_Fields = {\n  __typename?: 'album_location_max_fields';\n  description?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** order by max() on columns of table \"album_location\" */\nexport type Album_Location_Max_Order_By = {\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Album_Location_Min_Fields = {\n  __typename?: 'album_location_min_fields';\n  description?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** order by min() on columns of table \"album_location\" */\nexport type Album_Location_Min_Order_By = {\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"album_location\" */\nexport type Album_Location_Mutation_Response = {\n  __typename?: 'album_location_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Album_Location>;\n};\n\n/** on_conflict condition type for table \"album_location\" */\nexport type Album_Location_On_Conflict = {\n  constraint: Album_Location_Constraint;\n  update_columns?: Array<Album_Location_Update_Column>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"album_location\". */\nexport type Album_Location_Order_By = {\n  albums_aggregate?: InputMaybe<Album_Aggregate_Order_By>;\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: album_location */\nexport type Album_Location_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"album_location\" */\nexport enum Album_Location_Select_Column {\n  /** column name */\n  Description = 'description',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** input type for updating data in table \"album_location\" */\nexport type Album_Location_Set_Input = {\n  description?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Album_Location_Stddev_Fields = {\n  __typename?: 'album_location_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Album_Location_Stddev_Pop_Fields = {\n  __typename?: 'album_location_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Pop_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Album_Location_Stddev_Samp_Fields = {\n  __typename?: 'album_location_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Samp_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Album_Location_Sum_Fields = {\n  __typename?: 'album_location_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"album_location\" */\nexport type Album_Location_Sum_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** update columns of table \"album_location\" */\nexport enum Album_Location_Update_Column {\n  /** column name */\n  Description = 'description',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** aggregate var_pop on columns */\nexport type Album_Location_Var_Pop_Fields = {\n  __typename?: 'album_location_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"album_location\" */\nexport type Album_Location_Var_Pop_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Album_Location_Var_Samp_Fields = {\n  __typename?: 'album_location_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"album_location\" */\nexport type Album_Location_Var_Samp_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Album_Location_Variance_Fields = {\n  __typename?: 'album_location_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"album_location\" */\nexport type Album_Location_Variance_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate max on columns */\nexport type Album_Max_Fields = {\n  __typename?: 'album_max_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** order by max() on columns of table \"album\" */\nexport type Album_Max_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Album_Min_Fields = {\n  __typename?: 'album_min_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** order by min() on columns of table \"album\" */\nexport type Album_Min_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"album\" */\nexport type Album_Mutation_Response = {\n  __typename?: 'album_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Album>;\n};\n\n/** on_conflict condition type for table \"album\" */\nexport type Album_On_Conflict = {\n  constraint: Album_Constraint;\n  update_columns?: Array<Album_Update_Column>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"album\". */\nexport type Album_Order_By = {\n  album_location_album_aggregate?: InputMaybe<Album_Location_Aggregate_Order_By>;\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: album */\nexport type Album_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"album\" */\nexport enum Album_Select_Column {\n  /** column name */\n  AlbumLocationId = 'album_location_id',\n  /** column name */\n  Description = 'description',\n  /** column name */\n  FlickrPhotoSetId = 'flickr_photo_set_id',\n  /** column name */\n  FlickrPhotoSetIdNum = 'flickr_photo_set_id_num',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Title = 'title'\n}\n\n/** input type for updating data in table \"album\" */\nexport type Album_Set_Input = {\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Album_Stddev_Fields = {\n  __typename?: 'album_stddev_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"album\" */\nexport type Album_Stddev_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Album_Stddev_Pop_Fields = {\n  __typename?: 'album_stddev_pop_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"album\" */\nexport type Album_Stddev_Pop_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Album_Stddev_Samp_Fields = {\n  __typename?: 'album_stddev_samp_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"album\" */\nexport type Album_Stddev_Samp_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Album_Sum_Fields = {\n  __typename?: 'album_sum_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"album\" */\nexport type Album_Sum_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** update columns of table \"album\" */\nexport enum Album_Update_Column {\n  /** column name */\n  AlbumLocationId = 'album_location_id',\n  /** column name */\n  Description = 'description',\n  /** column name */\n  FlickrPhotoSetId = 'flickr_photo_set_id',\n  /** column name */\n  FlickrPhotoSetIdNum = 'flickr_photo_set_id_num',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Title = 'title'\n}\n\n/** aggregate var_pop on columns */\nexport type Album_Var_Pop_Fields = {\n  __typename?: 'album_var_pop_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"album\" */\nexport type Album_Var_Pop_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Album_Var_Samp_Fields = {\n  __typename?: 'album_var_samp_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"album\" */\nexport type Album_Var_Samp_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Album_Variance_Fields = {\n  __typename?: 'album_variance_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"album\" */\nexport type Album_Variance_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to compare columns of type \"float8\". All fields are combined with logical 'AND'. */\nexport type Float8_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['float8']>;\n  _gt?: InputMaybe<Scalars['float8']>;\n  _gte?: InputMaybe<Scalars['float8']>;\n  _in?: InputMaybe<Array<Scalars['float8']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['float8']>;\n  _lte?: InputMaybe<Scalars['float8']>;\n  _neq?: InputMaybe<Scalars['float8']>;\n  _nin?: InputMaybe<Array<Scalars['float8']>>;\n};\n\n/** mutation root */\nexport type Mutation_Root = {\n  __typename?: 'mutation_root';\n  /** delete data from the table: \"album\" */\n  delete_album?: Maybe<Album_Mutation_Response>;\n  /** delete single row from the table: \"album\" */\n  delete_album_by_pk?: Maybe<Album>;\n  /** delete data from the table: \"album_location\" */\n  delete_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** delete single row from the table: \"album_location\" */\n  delete_album_location_by_pk?: Maybe<Album_Location>;\n  /** delete data from the table: \"photo_size\" */\n  delete_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** delete single row from the table: \"photo_size\" */\n  delete_photo_size_by_pk?: Maybe<Photo_Size>;\n  /** delete data from the table: \"photo_sizes\" */\n  delete_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** delete single row from the table: \"photo_sizes\" */\n  delete_photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** delete data from the table: \"photo_sizes_photo_size_array\" */\n  delete_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** delete single row from the table: \"photo_sizes_photo_size_array\" */\n  delete_photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n  /** insert data into the table: \"album\" */\n  insert_album?: Maybe<Album_Mutation_Response>;\n  /** insert data into the table: \"album_location\" */\n  insert_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** insert a single row into the table: \"album_location\" */\n  insert_album_location_one?: Maybe<Album_Location>;\n  /** insert a single row into the table: \"album\" */\n  insert_album_one?: Maybe<Album>;\n  /** insert data into the table: \"photo_size\" */\n  insert_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** insert a single row into the table: \"photo_size\" */\n  insert_photo_size_one?: Maybe<Photo_Size>;\n  /** insert data into the table: \"photo_sizes\" */\n  insert_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** insert a single row into the table: \"photo_sizes\" */\n  insert_photo_sizes_one?: Maybe<Photo_Sizes>;\n  /** insert data into the table: \"photo_sizes_photo_size_array\" */\n  insert_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** insert a single row into the table: \"photo_sizes_photo_size_array\" */\n  insert_photo_sizes_photo_size_array_one?: Maybe<Photo_Sizes_Photo_Size_Array>;\n  /** update data of the table: \"album\" */\n  update_album?: Maybe<Album_Mutation_Response>;\n  /** update single row of the table: \"album\" */\n  update_album_by_pk?: Maybe<Album>;\n  /** update data of the table: \"album_location\" */\n  update_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** update single row of the table: \"album_location\" */\n  update_album_location_by_pk?: Maybe<Album_Location>;\n  /** update data of the table: \"photo_size\" */\n  update_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** update single row of the table: \"photo_size\" */\n  update_photo_size_by_pk?: Maybe<Photo_Size>;\n  /** update data of the table: \"photo_sizes\" */\n  update_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** update single row of the table: \"photo_sizes\" */\n  update_photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** update data of the table: \"photo_sizes_photo_size_array\" */\n  update_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** update single row of the table: \"photo_sizes_photo_size_array\" */\n  update_photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_AlbumArgs = {\n  where: Album_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_LocationArgs = {\n  where: Album_Location_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_SizeArgs = {\n  where: Photo_Size_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_SizesArgs = {\n  where: Photo_Sizes_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_Photo_Size_ArrayArgs = {\n  where: Photo_Sizes_Photo_Size_Array_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_AlbumArgs = {\n  objects: Array<Album_Insert_Input>;\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_LocationArgs = {\n  objects: Array<Album_Location_Insert_Input>;\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_Location_OneArgs = {\n  object: Album_Location_Insert_Input;\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_OneArgs = {\n  object: Album_Insert_Input;\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_SizeArgs = {\n  objects: Array<Photo_Size_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Size_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Size_OneArgs = {\n  object: Photo_Size_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Size_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_SizesArgs = {\n  objects: Array<Photo_Sizes_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Sizes_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_OneArgs = {\n  object: Photo_Sizes_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Sizes_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_Photo_Size_ArrayArgs = {\n  objects: Array<Photo_Sizes_Photo_Size_Array_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Sizes_Photo_Size_Array_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_Photo_Size_Array_OneArgs = {\n  object: Photo_Sizes_Photo_Size_Array_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Sizes_Photo_Size_Array_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_AlbumArgs = {\n  _inc?: InputMaybe<Album_Inc_Input>;\n  _set?: InputMaybe<Album_Set_Input>;\n  where: Album_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_By_PkArgs = {\n  _inc?: InputMaybe<Album_Inc_Input>;\n  _set?: InputMaybe<Album_Set_Input>;\n  pk_columns: Album_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_LocationArgs = {\n  _inc?: InputMaybe<Album_Location_Inc_Input>;\n  _set?: InputMaybe<Album_Location_Set_Input>;\n  where: Album_Location_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_Location_By_PkArgs = {\n  _inc?: InputMaybe<Album_Location_Inc_Input>;\n  _set?: InputMaybe<Album_Location_Set_Input>;\n  pk_columns: Album_Location_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_SizeArgs = {\n  _inc?: InputMaybe<Photo_Size_Inc_Input>;\n  _set?: InputMaybe<Photo_Size_Set_Input>;\n  where: Photo_Size_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Size_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Size_Inc_Input>;\n  _set?: InputMaybe<Photo_Size_Set_Input>;\n  pk_columns: Photo_Size_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_SizesArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Set_Input>;\n  where: Photo_Sizes_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Set_Input>;\n  pk_columns: Photo_Sizes_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_Photo_Size_ArrayArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Photo_Size_Array_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Photo_Size_Array_Set_Input>;\n  where: Photo_Sizes_Photo_Size_Array_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_Photo_Size_Array_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Photo_Size_Array_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Photo_Size_Array_Set_Input>;\n  pk_columns: Photo_Sizes_Photo_Size_Array_Pk_Columns_Input;\n};\n\n/** column ordering options */\nexport enum Order_By {\n  /** in ascending order, nulls last */\n  Asc = 'asc',\n  /** in ascending order, nulls first */\n  AscNullsFirst = 'asc_nulls_first',\n  /** in ascending order, nulls last */\n  AscNullsLast = 'asc_nulls_last',\n  /** in descending order, nulls first */\n  Desc = 'desc',\n  /** in descending order, nulls first */\n  DescNullsFirst = 'desc_nulls_first',\n  /** in descending order, nulls last */\n  DescNullsLast = 'desc_nulls_last'\n}\n\n/**\n * Flickr Album Photo Data\n *\n *\n * columns and relationships of \"photo_size\"\n *\n */\nexport type Photo_Size = {\n  __typename?: 'photo_size';\n  height?: Maybe<Scalars['String']>;\n  id: Scalars['Int'];\n  label: Scalars['String'];\n  media?: Maybe<Scalars['String']>;\n  source: Scalars['String'];\n  width?: Maybe<Scalars['String']>;\n};\n\n/** aggregated selection of \"photo_size\" */\nexport type Photo_Size_Aggregate = {\n  __typename?: 'photo_size_aggregate';\n  aggregate?: Maybe<Photo_Size_Aggregate_Fields>;\n  nodes: Array<Photo_Size>;\n};\n\n/** aggregate fields of \"photo_size\" */\nexport type Photo_Size_Aggregate_Fields = {\n  __typename?: 'photo_size_aggregate_fields';\n  avg?: Maybe<Photo_Size_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Size_Max_Fields>;\n  min?: Maybe<Photo_Size_Min_Fields>;\n  stddev?: Maybe<Photo_Size_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Size_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Size_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Size_Sum_Fields>;\n  var_pop?: Maybe<Photo_Size_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Size_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Size_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_size\" */\nexport type Photo_Size_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Size_Avg_Fields = {\n  __typename?: 'photo_size_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_size\". All fields are combined with a logical 'AND'. */\nexport type Photo_Size_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Size_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Size_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Size_Bool_Exp>>;\n  height?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  label?: InputMaybe<String_Comparison_Exp>;\n  media?: InputMaybe<String_Comparison_Exp>;\n  source?: InputMaybe<String_Comparison_Exp>;\n  width?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_size\" */\nexport enum Photo_Size_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizeIdKey = 'photo_size_id_key',\n  /** unique or primary key constraint */\n  PhotoSizePkey = 'photo_size_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_size\" */\nexport type Photo_Size_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_size\" */\nexport type Photo_Size_Insert_Input = {\n  height?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  label?: InputMaybe<Scalars['String']>;\n  media?: InputMaybe<Scalars['String']>;\n  source?: InputMaybe<Scalars['String']>;\n  width?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Size_Max_Fields = {\n  __typename?: 'photo_size_max_fields';\n  height?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  media?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Size_Min_Fields = {\n  __typename?: 'photo_size_min_fields';\n  height?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  media?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"photo_size\" */\nexport type Photo_Size_Mutation_Response = {\n  __typename?: 'photo_size_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Size>;\n};\n\n/** on_conflict condition type for table \"photo_size\" */\nexport type Photo_Size_On_Conflict = {\n  constraint: Photo_Size_Constraint;\n  update_columns?: Array<Photo_Size_Update_Column>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_size\". */\nexport type Photo_Size_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  label?: InputMaybe<Order_By>;\n  media?: InputMaybe<Order_By>;\n  source?: InputMaybe<Order_By>;\n  width?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: photo_size */\nexport type Photo_Size_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_size\" */\nexport enum Photo_Size_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Label = 'label',\n  /** column name */\n  Media = 'media',\n  /** column name */\n  Source = 'source',\n  /** column name */\n  Width = 'width'\n}\n\n/** input type for updating data in table \"photo_size\" */\nexport type Photo_Size_Set_Input = {\n  height?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  label?: InputMaybe<Scalars['String']>;\n  media?: InputMaybe<Scalars['String']>;\n  source?: InputMaybe<Scalars['String']>;\n  width?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Size_Stddev_Fields = {\n  __typename?: 'photo_size_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Size_Stddev_Pop_Fields = {\n  __typename?: 'photo_size_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Size_Stddev_Samp_Fields = {\n  __typename?: 'photo_size_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Size_Sum_Fields = {\n  __typename?: 'photo_size_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_size\" */\nexport enum Photo_Size_Update_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Label = 'label',\n  /** column name */\n  Media = 'media',\n  /** column name */\n  Source = 'source',\n  /** column name */\n  Width = 'width'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Size_Var_Pop_Fields = {\n  __typename?: 'photo_size_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Size_Var_Samp_Fields = {\n  __typename?: 'photo_size_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Size_Variance_Fields = {\n  __typename?: 'photo_size_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/**\n * Collection of PhotoSize\n *\n *\n * columns and relationships of \"photo_sizes\"\n *\n */\nexport type Photo_Sizes = {\n  __typename?: 'photo_sizes';\n  canblog: Scalars['Boolean'];\n  candownload: Scalars['Boolean'];\n  canprint: Scalars['Boolean'];\n  id: Scalars['Int'];\n  photo_size_array_id: Scalars['Int'];\n};\n\n/** aggregated selection of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate = {\n  __typename?: 'photo_sizes_aggregate';\n  aggregate?: Maybe<Photo_Sizes_Aggregate_Fields>;\n  nodes: Array<Photo_Sizes>;\n};\n\n/** aggregate fields of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate_Fields = {\n  __typename?: 'photo_sizes_aggregate_fields';\n  avg?: Maybe<Photo_Sizes_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Sizes_Max_Fields>;\n  min?: Maybe<Photo_Sizes_Min_Fields>;\n  stddev?: Maybe<Photo_Sizes_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Sizes_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Sizes_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Sizes_Sum_Fields>;\n  var_pop?: Maybe<Photo_Sizes_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Sizes_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Sizes_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Sizes_Avg_Fields = {\n  __typename?: 'photo_sizes_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_sizes\". All fields are combined with a logical 'AND'. */\nexport type Photo_Sizes_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Sizes_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Sizes_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Sizes_Bool_Exp>>;\n  canblog?: InputMaybe<Boolean_Comparison_Exp>;\n  candownload?: InputMaybe<Boolean_Comparison_Exp>;\n  canprint?: InputMaybe<Boolean_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  photo_size_array_id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_sizes\" */\nexport enum Photo_Sizes_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizesPkey = 'photo_sizes_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_sizes\" */\nexport type Photo_Sizes_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_sizes\" */\nexport type Photo_Sizes_Insert_Input = {\n  canblog?: InputMaybe<Scalars['Boolean']>;\n  candownload?: InputMaybe<Scalars['Boolean']>;\n  canprint?: InputMaybe<Scalars['Boolean']>;\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Sizes_Max_Fields = {\n  __typename?: 'photo_sizes_max_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Sizes_Min_Fields = {\n  __typename?: 'photo_sizes_min_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** response of any mutation on the table \"photo_sizes\" */\nexport type Photo_Sizes_Mutation_Response = {\n  __typename?: 'photo_sizes_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Sizes>;\n};\n\n/** on_conflict condition type for table \"photo_sizes\" */\nexport type Photo_Sizes_On_Conflict = {\n  constraint: Photo_Sizes_Constraint;\n  update_columns?: Array<Photo_Sizes_Update_Column>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_sizes\". */\nexport type Photo_Sizes_Order_By = {\n  canblog?: InputMaybe<Order_By>;\n  candownload?: InputMaybe<Order_By>;\n  canprint?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  photo_size_array_id?: InputMaybe<Order_By>;\n};\n\n/**\n * Array of photo_size for photo_sizes\n *\n *\n * columns and relationships of \"photo_sizes_photo_size_array\"\n *\n */\nexport type Photo_Sizes_Photo_Size_Array = {\n  __typename?: 'photo_sizes_photo_size_array';\n  id: Scalars['Int'];\n  photo_size_id: Scalars['Int'];\n  photo_sizes_id: Scalars['Int'];\n};\n\n/** aggregated selection of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate = {\n  __typename?: 'photo_sizes_photo_size_array_aggregate';\n  aggregate?: Maybe<Photo_Sizes_Photo_Size_Array_Aggregate_Fields>;\n  nodes: Array<Photo_Sizes_Photo_Size_Array>;\n};\n\n/** aggregate fields of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_aggregate_fields';\n  avg?: Maybe<Photo_Sizes_Photo_Size_Array_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Sizes_Photo_Size_Array_Max_Fields>;\n  min?: Maybe<Photo_Sizes_Photo_Size_Array_Min_Fields>;\n  stddev?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Sizes_Photo_Size_Array_Sum_Fields>;\n  var_pop?: Maybe<Photo_Sizes_Photo_Size_Array_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Sizes_Photo_Size_Array_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Sizes_Photo_Size_Array_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Sizes_Photo_Size_Array_Avg_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_sizes_photo_size_array\". All fields are combined with a logical 'AND'. */\nexport type Photo_Sizes_Photo_Size_Array_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Bool_Exp>>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  photo_size_id?: InputMaybe<Int_Comparison_Exp>;\n  photo_sizes_id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizesPhotoSizeArrayPkey = 'photo_sizes_photo_size_array_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Insert_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Sizes_Photo_Size_Array_Max_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_max_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Sizes_Photo_Size_Array_Min_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_min_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** response of any mutation on the table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Mutation_Response = {\n  __typename?: 'photo_sizes_photo_size_array_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Sizes_Photo_Size_Array>;\n};\n\n/** on_conflict condition type for table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_On_Conflict = {\n  constraint: Photo_Sizes_Photo_Size_Array_Constraint;\n  update_columns?: Array<Photo_Sizes_Photo_Size_Array_Update_Column>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_sizes_photo_size_array\". */\nexport type Photo_Sizes_Photo_Size_Array_Order_By = {\n  id?: InputMaybe<Order_By>;\n  photo_size_id?: InputMaybe<Order_By>;\n  photo_sizes_id?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: photo_sizes_photo_size_array */\nexport type Photo_Sizes_Photo_Size_Array_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Select_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeId = 'photo_size_id',\n  /** column name */\n  PhotoSizesId = 'photo_sizes_id'\n}\n\n/** input type for updating data in table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Set_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Pop_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Samp_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Sizes_Photo_Size_Array_Sum_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Update_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeId = 'photo_size_id',\n  /** column name */\n  PhotoSizesId = 'photo_sizes_id'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Sizes_Photo_Size_Array_Var_Pop_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Sizes_Photo_Size_Array_Var_Samp_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Sizes_Photo_Size_Array_Variance_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** primary key columns input for table: photo_sizes */\nexport type Photo_Sizes_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_sizes\" */\nexport enum Photo_Sizes_Select_Column {\n  /** column name */\n  Canblog = 'canblog',\n  /** column name */\n  Candownload = 'candownload',\n  /** column name */\n  Canprint = 'canprint',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeArrayId = 'photo_size_array_id'\n}\n\n/** input type for updating data in table \"photo_sizes\" */\nexport type Photo_Sizes_Set_Input = {\n  canblog?: InputMaybe<Scalars['Boolean']>;\n  candownload?: InputMaybe<Scalars['Boolean']>;\n  canprint?: InputMaybe<Scalars['Boolean']>;\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Sizes_Stddev_Fields = {\n  __typename?: 'photo_sizes_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Sizes_Stddev_Pop_Fields = {\n  __typename?: 'photo_sizes_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Sizes_Stddev_Samp_Fields = {\n  __typename?: 'photo_sizes_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Sizes_Sum_Fields = {\n  __typename?: 'photo_sizes_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_sizes\" */\nexport enum Photo_Sizes_Update_Column {\n  /** column name */\n  Canblog = 'canblog',\n  /** column name */\n  Candownload = 'candownload',\n  /** column name */\n  Canprint = 'canprint',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeArrayId = 'photo_size_array_id'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Sizes_Var_Pop_Fields = {\n  __typename?: 'photo_sizes_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Sizes_Var_Samp_Fields = {\n  __typename?: 'photo_sizes_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Sizes_Variance_Fields = {\n  __typename?: 'photo_sizes_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\nexport type Query_Root = {\n  __typename?: 'query_root';\n  /** fetch data from the table: \"album\" */\n  album: Array<Album>;\n  /** fetch aggregated fields from the table: \"album\" */\n  album_aggregate: Album_Aggregate;\n  /** fetch data from the table: \"album\" using primary key columns */\n  album_by_pk?: Maybe<Album>;\n  /** fetch data from the table: \"album_location\" */\n  album_location: Array<Album_Location>;\n  /** fetch aggregated fields from the table: \"album_location\" */\n  album_location_aggregate: Album_Location_Aggregate;\n  /** fetch data from the table: \"album_location\" using primary key columns */\n  album_location_by_pk?: Maybe<Album_Location>;\n  /** fetch data from the table: \"photo_size\" */\n  photo_size: Array<Photo_Size>;\n  /** fetch aggregated fields from the table: \"photo_size\" */\n  photo_size_aggregate: Photo_Size_Aggregate;\n  /** fetch data from the table: \"photo_size\" using primary key columns */\n  photo_size_by_pk?: Maybe<Photo_Size>;\n  /** fetch data from the table: \"photo_sizes\" */\n  photo_sizes: Array<Photo_Sizes>;\n  /** fetch aggregated fields from the table: \"photo_sizes\" */\n  photo_sizes_aggregate: Photo_Sizes_Aggregate;\n  /** fetch data from the table: \"photo_sizes\" using primary key columns */\n  photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array: Array<Photo_Sizes_Photo_Size_Array>;\n  /** fetch aggregated fields from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array_aggregate: Photo_Sizes_Photo_Size_Array_Aggregate;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" using primary key columns */\n  photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\nexport type Query_RootAlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootAlbum_LocationArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_Location_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_SizeArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Size_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_SizesArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_ArrayArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\nexport type Subscription_Root = {\n  __typename?: 'subscription_root';\n  /** fetch data from the table: \"album\" */\n  album: Array<Album>;\n  /** fetch aggregated fields from the table: \"album\" */\n  album_aggregate: Album_Aggregate;\n  /** fetch data from the table: \"album\" using primary key columns */\n  album_by_pk?: Maybe<Album>;\n  /** fetch data from the table: \"album_location\" */\n  album_location: Array<Album_Location>;\n  /** fetch aggregated fields from the table: \"album_location\" */\n  album_location_aggregate: Album_Location_Aggregate;\n  /** fetch data from the table: \"album_location\" using primary key columns */\n  album_location_by_pk?: Maybe<Album_Location>;\n  /** fetch data from the table: \"photo_size\" */\n  photo_size: Array<Photo_Size>;\n  /** fetch aggregated fields from the table: \"photo_size\" */\n  photo_size_aggregate: Photo_Size_Aggregate;\n  /** fetch data from the table: \"photo_size\" using primary key columns */\n  photo_size_by_pk?: Maybe<Photo_Size>;\n  /** fetch data from the table: \"photo_sizes\" */\n  photo_sizes: Array<Photo_Sizes>;\n  /** fetch aggregated fields from the table: \"photo_sizes\" */\n  photo_sizes_aggregate: Photo_Sizes_Aggregate;\n  /** fetch data from the table: \"photo_sizes\" using primary key columns */\n  photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array: Array<Photo_Sizes_Photo_Size_Array>;\n  /** fetch aggregated fields from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array_aggregate: Photo_Sizes_Photo_Size_Array_Aggregate;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" using primary key columns */\n  photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\nexport type Subscription_RootAlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootAlbum_LocationArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_Location_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_SizeArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Size_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_SizesArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_ArrayArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\nexport type GetAlbumsByLocationQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAlbumsByLocationQuery = { __typename?: 'query_root', album_location: Array<{ __typename: 'album_location', id: number, name: string, description: string, modified?: boolean | null | undefined, albums: Array<{ __typename: 'album', flickr_photo_set_id?: string | null | undefined, title: string, description: string }> }> };\n\nexport type GetAlbumsByLocationPublicClientQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAlbumsByLocationPublicClientQuery = { __typename?: 'query_root', album_location: Array<{ __typename: 'album_location', id: number, name: string, description: string, modified?: boolean | null | undefined, albums: Array<{ __typename: 'album', flickr_photo_set_id?: string | null | undefined, title: string, description: string }> }> };\n\nexport const GetAlbumsByLocationDocument = gql`\n    query GetAlbumsByLocation {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: GeneratedModule\n  })\n  export class GetAlbumsByLocationGQL extends Apollo.Query<GetAlbumsByLocationQuery, GetAlbumsByLocationQueryVariables> {\n    document = GetAlbumsByLocationDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetAlbumsByLocationPublicClientDocument = gql`\n    query GetAlbumsByLocationPublicClient {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: GeneratedModule\n  })\n  export class GetAlbumsByLocationPublicClientGQL extends Apollo.Query<GetAlbumsByLocationPublicClientQuery, GetAlbumsByLocationPublicClientQueryVariables> {\n    document = GetAlbumsByLocationPublicClientDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\n\n      export interface PossibleTypesResultData {\n        possibleTypes: {\n          [key: string]: string[]\n        }\n      }\n      const result: PossibleTypesResultData = {\n  \"possibleTypes\": {}\n};\n      export default result;\n    ",
            "properties": [
                {
                    "name": "possibleTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 2086
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "GetAlbumsByLocationGQL",
            "id": "injectable-GetAlbumsByLocationGQL-2c61f8d6cb2aeaab2e9b2c1bc137a91e9508bdc2363c4702033fa3e7e75b15db64afd1a6f81836ac2d44c4e19a387b344b26c600007db709c36efecd2f9928a1",
            "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "GetAlbumsByLocationDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 2050
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nimport { GeneratedModule } from '../generated.module';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  float8: any;\n};\n\n/** Boolean expression to compare columns of type \"Boolean\". All fields are combined with logical 'AND'. */\nexport type Boolean_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Boolean']>;\n  _gt?: InputMaybe<Scalars['Boolean']>;\n  _gte?: InputMaybe<Scalars['Boolean']>;\n  _in?: InputMaybe<Array<Scalars['Boolean']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['Boolean']>;\n  _lte?: InputMaybe<Scalars['Boolean']>;\n  _neq?: InputMaybe<Scalars['Boolean']>;\n  _nin?: InputMaybe<Array<Scalars['Boolean']>>;\n};\n\n/** Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'. */\nexport type Int_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Int']>;\n  _gt?: InputMaybe<Scalars['Int']>;\n  _gte?: InputMaybe<Scalars['Int']>;\n  _in?: InputMaybe<Array<Scalars['Int']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['Int']>;\n  _lte?: InputMaybe<Scalars['Int']>;\n  _neq?: InputMaybe<Scalars['Int']>;\n  _nin?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'. */\nexport type String_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['String']>;\n  _gt?: InputMaybe<Scalars['String']>;\n  _gte?: InputMaybe<Scalars['String']>;\n  /** does the column match the given case-insensitive pattern */\n  _ilike?: InputMaybe<Scalars['String']>;\n  _in?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column match the given POSIX regular expression, case insensitive */\n  _iregex?: InputMaybe<Scalars['String']>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  /** does the column match the given pattern */\n  _like?: InputMaybe<Scalars['String']>;\n  _lt?: InputMaybe<Scalars['String']>;\n  _lte?: InputMaybe<Scalars['String']>;\n  _neq?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given case-insensitive pattern */\n  _nilike?: InputMaybe<Scalars['String']>;\n  _nin?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column NOT match the given POSIX regular expression, case insensitive */\n  _niregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given pattern */\n  _nlike?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given POSIX regular expression, case sensitive */\n  _nregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given SQL regular expression */\n  _nsimilar?: InputMaybe<Scalars['String']>;\n  /** does the column match the given POSIX regular expression, case sensitive */\n  _regex?: InputMaybe<Scalars['String']>;\n  /** does the column match the given SQL regular expression */\n  _similar?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type Album = {\n  __typename?: 'album';\n  /** An array relationship */\n  album_location_album: Array<Album_Location>;\n  /** An aggregate relationship */\n  album_location_album_aggregate: Album_Location_Aggregate;\n  album_location_id: Scalars['Int'];\n  description: Scalars['String'];\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num: Scalars['float8'];\n  id: Scalars['Int'];\n  title: Scalars['String'];\n};\n\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type AlbumAlbum_Location_AlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type AlbumAlbum_Location_Album_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n/** aggregated selection of \"album\" */\nexport type Album_Aggregate = {\n  __typename?: 'album_aggregate';\n  aggregate?: Maybe<Album_Aggregate_Fields>;\n  nodes: Array<Album>;\n};\n\n/** aggregate fields of \"album\" */\nexport type Album_Aggregate_Fields = {\n  __typename?: 'album_aggregate_fields';\n  avg?: Maybe<Album_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Album_Max_Fields>;\n  min?: Maybe<Album_Min_Fields>;\n  stddev?: Maybe<Album_Stddev_Fields>;\n  stddev_pop?: Maybe<Album_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Album_Stddev_Samp_Fields>;\n  sum?: Maybe<Album_Sum_Fields>;\n  var_pop?: Maybe<Album_Var_Pop_Fields>;\n  var_samp?: Maybe<Album_Var_Samp_Fields>;\n  variance?: Maybe<Album_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"album\" */\nexport type Album_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Album_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"album\" */\nexport type Album_Aggregate_Order_By = {\n  avg?: InputMaybe<Album_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Album_Max_Order_By>;\n  min?: InputMaybe<Album_Min_Order_By>;\n  stddev?: InputMaybe<Album_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Album_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Album_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Album_Sum_Order_By>;\n  var_pop?: InputMaybe<Album_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Album_Var_Samp_Order_By>;\n  variance?: InputMaybe<Album_Variance_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"album\" */\nexport type Album_Arr_Rel_Insert_Input = {\n  data: Array<Album_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n/** aggregate avg on columns */\nexport type Album_Avg_Fields = {\n  __typename?: 'album_avg_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"album\" */\nexport type Album_Avg_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"album\". All fields are combined with a logical 'AND'. */\nexport type Album_Bool_Exp = {\n  _and?: InputMaybe<Array<Album_Bool_Exp>>;\n  _not?: InputMaybe<Album_Bool_Exp>;\n  _or?: InputMaybe<Array<Album_Bool_Exp>>;\n  album_location_album?: InputMaybe<Album_Location_Bool_Exp>;\n  album_location_id?: InputMaybe<Int_Comparison_Exp>;\n  description?: InputMaybe<String_Comparison_Exp>;\n  flickr_photo_set_id?: InputMaybe<String_Comparison_Exp>;\n  flickr_photo_set_id_num?: InputMaybe<Float8_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  title?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"album\" */\nexport enum Album_Constraint {\n  /** unique or primary key constraint */\n  AlbumPkey = 'album_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"album\" */\nexport type Album_Inc_Input = {\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"album\" */\nexport type Album_Insert_Input = {\n  album_location_album?: InputMaybe<Album_Location_Arr_Rel_Insert_Input>;\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_Location = {\n  __typename?: 'album_location';\n  /** An array relationship */\n  albums: Array<Album>;\n  /** An aggregate relationship */\n  albums_aggregate: Album_Aggregate;\n  description: Scalars['String'];\n  id: Scalars['Int'];\n  modified?: Maybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n};\n\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_LocationAlbumsArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_LocationAlbums_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n/** aggregated selection of \"album_location\" */\nexport type Album_Location_Aggregate = {\n  __typename?: 'album_location_aggregate';\n  aggregate?: Maybe<Album_Location_Aggregate_Fields>;\n  nodes: Array<Album_Location>;\n};\n\n/** aggregate fields of \"album_location\" */\nexport type Album_Location_Aggregate_Fields = {\n  __typename?: 'album_location_aggregate_fields';\n  avg?: Maybe<Album_Location_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Album_Location_Max_Fields>;\n  min?: Maybe<Album_Location_Min_Fields>;\n  stddev?: Maybe<Album_Location_Stddev_Fields>;\n  stddev_pop?: Maybe<Album_Location_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Album_Location_Stddev_Samp_Fields>;\n  sum?: Maybe<Album_Location_Sum_Fields>;\n  var_pop?: Maybe<Album_Location_Var_Pop_Fields>;\n  var_samp?: Maybe<Album_Location_Var_Samp_Fields>;\n  variance?: Maybe<Album_Location_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"album_location\" */\nexport type Album_Location_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Album_Location_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"album_location\" */\nexport type Album_Location_Aggregate_Order_By = {\n  avg?: InputMaybe<Album_Location_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Album_Location_Max_Order_By>;\n  min?: InputMaybe<Album_Location_Min_Order_By>;\n  stddev?: InputMaybe<Album_Location_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Album_Location_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Album_Location_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Album_Location_Sum_Order_By>;\n  var_pop?: InputMaybe<Album_Location_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Album_Location_Var_Samp_Order_By>;\n  variance?: InputMaybe<Album_Location_Variance_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"album_location\" */\nexport type Album_Location_Arr_Rel_Insert_Input = {\n  data: Array<Album_Location_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n/** aggregate avg on columns */\nexport type Album_Location_Avg_Fields = {\n  __typename?: 'album_location_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"album_location\" */\nexport type Album_Location_Avg_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"album_location\". All fields are combined with a logical 'AND'. */\nexport type Album_Location_Bool_Exp = {\n  _and?: InputMaybe<Array<Album_Location_Bool_Exp>>;\n  _not?: InputMaybe<Album_Location_Bool_Exp>;\n  _or?: InputMaybe<Array<Album_Location_Bool_Exp>>;\n  albums?: InputMaybe<Album_Bool_Exp>;\n  description?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"album_location\" */\nexport enum Album_Location_Constraint {\n  /** unique or primary key constraint */\n  AlbumLocationPkey = 'album_location_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"album_location\" */\nexport type Album_Location_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"album_location\" */\nexport type Album_Location_Insert_Input = {\n  albums?: InputMaybe<Album_Arr_Rel_Insert_Input>;\n  description?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Album_Location_Max_Fields = {\n  __typename?: 'album_location_max_fields';\n  description?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** order by max() on columns of table \"album_location\" */\nexport type Album_Location_Max_Order_By = {\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Album_Location_Min_Fields = {\n  __typename?: 'album_location_min_fields';\n  description?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** order by min() on columns of table \"album_location\" */\nexport type Album_Location_Min_Order_By = {\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"album_location\" */\nexport type Album_Location_Mutation_Response = {\n  __typename?: 'album_location_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Album_Location>;\n};\n\n/** on_conflict condition type for table \"album_location\" */\nexport type Album_Location_On_Conflict = {\n  constraint: Album_Location_Constraint;\n  update_columns?: Array<Album_Location_Update_Column>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"album_location\". */\nexport type Album_Location_Order_By = {\n  albums_aggregate?: InputMaybe<Album_Aggregate_Order_By>;\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: album_location */\nexport type Album_Location_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"album_location\" */\nexport enum Album_Location_Select_Column {\n  /** column name */\n  Description = 'description',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** input type for updating data in table \"album_location\" */\nexport type Album_Location_Set_Input = {\n  description?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Album_Location_Stddev_Fields = {\n  __typename?: 'album_location_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Album_Location_Stddev_Pop_Fields = {\n  __typename?: 'album_location_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Pop_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Album_Location_Stddev_Samp_Fields = {\n  __typename?: 'album_location_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Samp_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Album_Location_Sum_Fields = {\n  __typename?: 'album_location_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"album_location\" */\nexport type Album_Location_Sum_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** update columns of table \"album_location\" */\nexport enum Album_Location_Update_Column {\n  /** column name */\n  Description = 'description',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** aggregate var_pop on columns */\nexport type Album_Location_Var_Pop_Fields = {\n  __typename?: 'album_location_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"album_location\" */\nexport type Album_Location_Var_Pop_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Album_Location_Var_Samp_Fields = {\n  __typename?: 'album_location_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"album_location\" */\nexport type Album_Location_Var_Samp_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Album_Location_Variance_Fields = {\n  __typename?: 'album_location_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"album_location\" */\nexport type Album_Location_Variance_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate max on columns */\nexport type Album_Max_Fields = {\n  __typename?: 'album_max_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** order by max() on columns of table \"album\" */\nexport type Album_Max_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Album_Min_Fields = {\n  __typename?: 'album_min_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** order by min() on columns of table \"album\" */\nexport type Album_Min_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"album\" */\nexport type Album_Mutation_Response = {\n  __typename?: 'album_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Album>;\n};\n\n/** on_conflict condition type for table \"album\" */\nexport type Album_On_Conflict = {\n  constraint: Album_Constraint;\n  update_columns?: Array<Album_Update_Column>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"album\". */\nexport type Album_Order_By = {\n  album_location_album_aggregate?: InputMaybe<Album_Location_Aggregate_Order_By>;\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: album */\nexport type Album_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"album\" */\nexport enum Album_Select_Column {\n  /** column name */\n  AlbumLocationId = 'album_location_id',\n  /** column name */\n  Description = 'description',\n  /** column name */\n  FlickrPhotoSetId = 'flickr_photo_set_id',\n  /** column name */\n  FlickrPhotoSetIdNum = 'flickr_photo_set_id_num',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Title = 'title'\n}\n\n/** input type for updating data in table \"album\" */\nexport type Album_Set_Input = {\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Album_Stddev_Fields = {\n  __typename?: 'album_stddev_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"album\" */\nexport type Album_Stddev_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Album_Stddev_Pop_Fields = {\n  __typename?: 'album_stddev_pop_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"album\" */\nexport type Album_Stddev_Pop_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Album_Stddev_Samp_Fields = {\n  __typename?: 'album_stddev_samp_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"album\" */\nexport type Album_Stddev_Samp_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Album_Sum_Fields = {\n  __typename?: 'album_sum_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"album\" */\nexport type Album_Sum_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** update columns of table \"album\" */\nexport enum Album_Update_Column {\n  /** column name */\n  AlbumLocationId = 'album_location_id',\n  /** column name */\n  Description = 'description',\n  /** column name */\n  FlickrPhotoSetId = 'flickr_photo_set_id',\n  /** column name */\n  FlickrPhotoSetIdNum = 'flickr_photo_set_id_num',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Title = 'title'\n}\n\n/** aggregate var_pop on columns */\nexport type Album_Var_Pop_Fields = {\n  __typename?: 'album_var_pop_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"album\" */\nexport type Album_Var_Pop_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Album_Var_Samp_Fields = {\n  __typename?: 'album_var_samp_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"album\" */\nexport type Album_Var_Samp_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Album_Variance_Fields = {\n  __typename?: 'album_variance_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"album\" */\nexport type Album_Variance_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to compare columns of type \"float8\". All fields are combined with logical 'AND'. */\nexport type Float8_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['float8']>;\n  _gt?: InputMaybe<Scalars['float8']>;\n  _gte?: InputMaybe<Scalars['float8']>;\n  _in?: InputMaybe<Array<Scalars['float8']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['float8']>;\n  _lte?: InputMaybe<Scalars['float8']>;\n  _neq?: InputMaybe<Scalars['float8']>;\n  _nin?: InputMaybe<Array<Scalars['float8']>>;\n};\n\n/** mutation root */\nexport type Mutation_Root = {\n  __typename?: 'mutation_root';\n  /** delete data from the table: \"album\" */\n  delete_album?: Maybe<Album_Mutation_Response>;\n  /** delete single row from the table: \"album\" */\n  delete_album_by_pk?: Maybe<Album>;\n  /** delete data from the table: \"album_location\" */\n  delete_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** delete single row from the table: \"album_location\" */\n  delete_album_location_by_pk?: Maybe<Album_Location>;\n  /** delete data from the table: \"photo_size\" */\n  delete_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** delete single row from the table: \"photo_size\" */\n  delete_photo_size_by_pk?: Maybe<Photo_Size>;\n  /** delete data from the table: \"photo_sizes\" */\n  delete_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** delete single row from the table: \"photo_sizes\" */\n  delete_photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** delete data from the table: \"photo_sizes_photo_size_array\" */\n  delete_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** delete single row from the table: \"photo_sizes_photo_size_array\" */\n  delete_photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n  /** insert data into the table: \"album\" */\n  insert_album?: Maybe<Album_Mutation_Response>;\n  /** insert data into the table: \"album_location\" */\n  insert_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** insert a single row into the table: \"album_location\" */\n  insert_album_location_one?: Maybe<Album_Location>;\n  /** insert a single row into the table: \"album\" */\n  insert_album_one?: Maybe<Album>;\n  /** insert data into the table: \"photo_size\" */\n  insert_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** insert a single row into the table: \"photo_size\" */\n  insert_photo_size_one?: Maybe<Photo_Size>;\n  /** insert data into the table: \"photo_sizes\" */\n  insert_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** insert a single row into the table: \"photo_sizes\" */\n  insert_photo_sizes_one?: Maybe<Photo_Sizes>;\n  /** insert data into the table: \"photo_sizes_photo_size_array\" */\n  insert_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** insert a single row into the table: \"photo_sizes_photo_size_array\" */\n  insert_photo_sizes_photo_size_array_one?: Maybe<Photo_Sizes_Photo_Size_Array>;\n  /** update data of the table: \"album\" */\n  update_album?: Maybe<Album_Mutation_Response>;\n  /** update single row of the table: \"album\" */\n  update_album_by_pk?: Maybe<Album>;\n  /** update data of the table: \"album_location\" */\n  update_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** update single row of the table: \"album_location\" */\n  update_album_location_by_pk?: Maybe<Album_Location>;\n  /** update data of the table: \"photo_size\" */\n  update_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** update single row of the table: \"photo_size\" */\n  update_photo_size_by_pk?: Maybe<Photo_Size>;\n  /** update data of the table: \"photo_sizes\" */\n  update_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** update single row of the table: \"photo_sizes\" */\n  update_photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** update data of the table: \"photo_sizes_photo_size_array\" */\n  update_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** update single row of the table: \"photo_sizes_photo_size_array\" */\n  update_photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_AlbumArgs = {\n  where: Album_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_LocationArgs = {\n  where: Album_Location_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_SizeArgs = {\n  where: Photo_Size_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_SizesArgs = {\n  where: Photo_Sizes_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_Photo_Size_ArrayArgs = {\n  where: Photo_Sizes_Photo_Size_Array_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_AlbumArgs = {\n  objects: Array<Album_Insert_Input>;\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_LocationArgs = {\n  objects: Array<Album_Location_Insert_Input>;\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_Location_OneArgs = {\n  object: Album_Location_Insert_Input;\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_OneArgs = {\n  object: Album_Insert_Input;\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_SizeArgs = {\n  objects: Array<Photo_Size_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Size_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Size_OneArgs = {\n  object: Photo_Size_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Size_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_SizesArgs = {\n  objects: Array<Photo_Sizes_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Sizes_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_OneArgs = {\n  object: Photo_Sizes_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Sizes_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_Photo_Size_ArrayArgs = {\n  objects: Array<Photo_Sizes_Photo_Size_Array_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Sizes_Photo_Size_Array_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_Photo_Size_Array_OneArgs = {\n  object: Photo_Sizes_Photo_Size_Array_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Sizes_Photo_Size_Array_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_AlbumArgs = {\n  _inc?: InputMaybe<Album_Inc_Input>;\n  _set?: InputMaybe<Album_Set_Input>;\n  where: Album_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_By_PkArgs = {\n  _inc?: InputMaybe<Album_Inc_Input>;\n  _set?: InputMaybe<Album_Set_Input>;\n  pk_columns: Album_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_LocationArgs = {\n  _inc?: InputMaybe<Album_Location_Inc_Input>;\n  _set?: InputMaybe<Album_Location_Set_Input>;\n  where: Album_Location_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_Location_By_PkArgs = {\n  _inc?: InputMaybe<Album_Location_Inc_Input>;\n  _set?: InputMaybe<Album_Location_Set_Input>;\n  pk_columns: Album_Location_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_SizeArgs = {\n  _inc?: InputMaybe<Photo_Size_Inc_Input>;\n  _set?: InputMaybe<Photo_Size_Set_Input>;\n  where: Photo_Size_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Size_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Size_Inc_Input>;\n  _set?: InputMaybe<Photo_Size_Set_Input>;\n  pk_columns: Photo_Size_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_SizesArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Set_Input>;\n  where: Photo_Sizes_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Set_Input>;\n  pk_columns: Photo_Sizes_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_Photo_Size_ArrayArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Photo_Size_Array_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Photo_Size_Array_Set_Input>;\n  where: Photo_Sizes_Photo_Size_Array_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_Photo_Size_Array_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Photo_Size_Array_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Photo_Size_Array_Set_Input>;\n  pk_columns: Photo_Sizes_Photo_Size_Array_Pk_Columns_Input;\n};\n\n/** column ordering options */\nexport enum Order_By {\n  /** in ascending order, nulls last */\n  Asc = 'asc',\n  /** in ascending order, nulls first */\n  AscNullsFirst = 'asc_nulls_first',\n  /** in ascending order, nulls last */\n  AscNullsLast = 'asc_nulls_last',\n  /** in descending order, nulls first */\n  Desc = 'desc',\n  /** in descending order, nulls first */\n  DescNullsFirst = 'desc_nulls_first',\n  /** in descending order, nulls last */\n  DescNullsLast = 'desc_nulls_last'\n}\n\n/**\n * Flickr Album Photo Data\n *\n *\n * columns and relationships of \"photo_size\"\n *\n */\nexport type Photo_Size = {\n  __typename?: 'photo_size';\n  height?: Maybe<Scalars['String']>;\n  id: Scalars['Int'];\n  label: Scalars['String'];\n  media?: Maybe<Scalars['String']>;\n  source: Scalars['String'];\n  width?: Maybe<Scalars['String']>;\n};\n\n/** aggregated selection of \"photo_size\" */\nexport type Photo_Size_Aggregate = {\n  __typename?: 'photo_size_aggregate';\n  aggregate?: Maybe<Photo_Size_Aggregate_Fields>;\n  nodes: Array<Photo_Size>;\n};\n\n/** aggregate fields of \"photo_size\" */\nexport type Photo_Size_Aggregate_Fields = {\n  __typename?: 'photo_size_aggregate_fields';\n  avg?: Maybe<Photo_Size_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Size_Max_Fields>;\n  min?: Maybe<Photo_Size_Min_Fields>;\n  stddev?: Maybe<Photo_Size_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Size_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Size_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Size_Sum_Fields>;\n  var_pop?: Maybe<Photo_Size_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Size_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Size_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_size\" */\nexport type Photo_Size_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Size_Avg_Fields = {\n  __typename?: 'photo_size_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_size\". All fields are combined with a logical 'AND'. */\nexport type Photo_Size_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Size_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Size_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Size_Bool_Exp>>;\n  height?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  label?: InputMaybe<String_Comparison_Exp>;\n  media?: InputMaybe<String_Comparison_Exp>;\n  source?: InputMaybe<String_Comparison_Exp>;\n  width?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_size\" */\nexport enum Photo_Size_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizeIdKey = 'photo_size_id_key',\n  /** unique or primary key constraint */\n  PhotoSizePkey = 'photo_size_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_size\" */\nexport type Photo_Size_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_size\" */\nexport type Photo_Size_Insert_Input = {\n  height?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  label?: InputMaybe<Scalars['String']>;\n  media?: InputMaybe<Scalars['String']>;\n  source?: InputMaybe<Scalars['String']>;\n  width?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Size_Max_Fields = {\n  __typename?: 'photo_size_max_fields';\n  height?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  media?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Size_Min_Fields = {\n  __typename?: 'photo_size_min_fields';\n  height?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  media?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"photo_size\" */\nexport type Photo_Size_Mutation_Response = {\n  __typename?: 'photo_size_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Size>;\n};\n\n/** on_conflict condition type for table \"photo_size\" */\nexport type Photo_Size_On_Conflict = {\n  constraint: Photo_Size_Constraint;\n  update_columns?: Array<Photo_Size_Update_Column>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_size\". */\nexport type Photo_Size_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  label?: InputMaybe<Order_By>;\n  media?: InputMaybe<Order_By>;\n  source?: InputMaybe<Order_By>;\n  width?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: photo_size */\nexport type Photo_Size_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_size\" */\nexport enum Photo_Size_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Label = 'label',\n  /** column name */\n  Media = 'media',\n  /** column name */\n  Source = 'source',\n  /** column name */\n  Width = 'width'\n}\n\n/** input type for updating data in table \"photo_size\" */\nexport type Photo_Size_Set_Input = {\n  height?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  label?: InputMaybe<Scalars['String']>;\n  media?: InputMaybe<Scalars['String']>;\n  source?: InputMaybe<Scalars['String']>;\n  width?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Size_Stddev_Fields = {\n  __typename?: 'photo_size_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Size_Stddev_Pop_Fields = {\n  __typename?: 'photo_size_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Size_Stddev_Samp_Fields = {\n  __typename?: 'photo_size_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Size_Sum_Fields = {\n  __typename?: 'photo_size_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_size\" */\nexport enum Photo_Size_Update_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Label = 'label',\n  /** column name */\n  Media = 'media',\n  /** column name */\n  Source = 'source',\n  /** column name */\n  Width = 'width'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Size_Var_Pop_Fields = {\n  __typename?: 'photo_size_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Size_Var_Samp_Fields = {\n  __typename?: 'photo_size_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Size_Variance_Fields = {\n  __typename?: 'photo_size_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/**\n * Collection of PhotoSize\n *\n *\n * columns and relationships of \"photo_sizes\"\n *\n */\nexport type Photo_Sizes = {\n  __typename?: 'photo_sizes';\n  canblog: Scalars['Boolean'];\n  candownload: Scalars['Boolean'];\n  canprint: Scalars['Boolean'];\n  id: Scalars['Int'];\n  photo_size_array_id: Scalars['Int'];\n};\n\n/** aggregated selection of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate = {\n  __typename?: 'photo_sizes_aggregate';\n  aggregate?: Maybe<Photo_Sizes_Aggregate_Fields>;\n  nodes: Array<Photo_Sizes>;\n};\n\n/** aggregate fields of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate_Fields = {\n  __typename?: 'photo_sizes_aggregate_fields';\n  avg?: Maybe<Photo_Sizes_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Sizes_Max_Fields>;\n  min?: Maybe<Photo_Sizes_Min_Fields>;\n  stddev?: Maybe<Photo_Sizes_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Sizes_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Sizes_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Sizes_Sum_Fields>;\n  var_pop?: Maybe<Photo_Sizes_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Sizes_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Sizes_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Sizes_Avg_Fields = {\n  __typename?: 'photo_sizes_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_sizes\". All fields are combined with a logical 'AND'. */\nexport type Photo_Sizes_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Sizes_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Sizes_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Sizes_Bool_Exp>>;\n  canblog?: InputMaybe<Boolean_Comparison_Exp>;\n  candownload?: InputMaybe<Boolean_Comparison_Exp>;\n  canprint?: InputMaybe<Boolean_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  photo_size_array_id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_sizes\" */\nexport enum Photo_Sizes_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizesPkey = 'photo_sizes_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_sizes\" */\nexport type Photo_Sizes_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_sizes\" */\nexport type Photo_Sizes_Insert_Input = {\n  canblog?: InputMaybe<Scalars['Boolean']>;\n  candownload?: InputMaybe<Scalars['Boolean']>;\n  canprint?: InputMaybe<Scalars['Boolean']>;\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Sizes_Max_Fields = {\n  __typename?: 'photo_sizes_max_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Sizes_Min_Fields = {\n  __typename?: 'photo_sizes_min_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** response of any mutation on the table \"photo_sizes\" */\nexport type Photo_Sizes_Mutation_Response = {\n  __typename?: 'photo_sizes_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Sizes>;\n};\n\n/** on_conflict condition type for table \"photo_sizes\" */\nexport type Photo_Sizes_On_Conflict = {\n  constraint: Photo_Sizes_Constraint;\n  update_columns?: Array<Photo_Sizes_Update_Column>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_sizes\". */\nexport type Photo_Sizes_Order_By = {\n  canblog?: InputMaybe<Order_By>;\n  candownload?: InputMaybe<Order_By>;\n  canprint?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  photo_size_array_id?: InputMaybe<Order_By>;\n};\n\n/**\n * Array of photo_size for photo_sizes\n *\n *\n * columns and relationships of \"photo_sizes_photo_size_array\"\n *\n */\nexport type Photo_Sizes_Photo_Size_Array = {\n  __typename?: 'photo_sizes_photo_size_array';\n  id: Scalars['Int'];\n  photo_size_id: Scalars['Int'];\n  photo_sizes_id: Scalars['Int'];\n};\n\n/** aggregated selection of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate = {\n  __typename?: 'photo_sizes_photo_size_array_aggregate';\n  aggregate?: Maybe<Photo_Sizes_Photo_Size_Array_Aggregate_Fields>;\n  nodes: Array<Photo_Sizes_Photo_Size_Array>;\n};\n\n/** aggregate fields of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_aggregate_fields';\n  avg?: Maybe<Photo_Sizes_Photo_Size_Array_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Sizes_Photo_Size_Array_Max_Fields>;\n  min?: Maybe<Photo_Sizes_Photo_Size_Array_Min_Fields>;\n  stddev?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Sizes_Photo_Size_Array_Sum_Fields>;\n  var_pop?: Maybe<Photo_Sizes_Photo_Size_Array_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Sizes_Photo_Size_Array_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Sizes_Photo_Size_Array_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Sizes_Photo_Size_Array_Avg_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_sizes_photo_size_array\". All fields are combined with a logical 'AND'. */\nexport type Photo_Sizes_Photo_Size_Array_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Bool_Exp>>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  photo_size_id?: InputMaybe<Int_Comparison_Exp>;\n  photo_sizes_id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizesPhotoSizeArrayPkey = 'photo_sizes_photo_size_array_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Insert_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Sizes_Photo_Size_Array_Max_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_max_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Sizes_Photo_Size_Array_Min_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_min_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** response of any mutation on the table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Mutation_Response = {\n  __typename?: 'photo_sizes_photo_size_array_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Sizes_Photo_Size_Array>;\n};\n\n/** on_conflict condition type for table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_On_Conflict = {\n  constraint: Photo_Sizes_Photo_Size_Array_Constraint;\n  update_columns?: Array<Photo_Sizes_Photo_Size_Array_Update_Column>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_sizes_photo_size_array\". */\nexport type Photo_Sizes_Photo_Size_Array_Order_By = {\n  id?: InputMaybe<Order_By>;\n  photo_size_id?: InputMaybe<Order_By>;\n  photo_sizes_id?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: photo_sizes_photo_size_array */\nexport type Photo_Sizes_Photo_Size_Array_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Select_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeId = 'photo_size_id',\n  /** column name */\n  PhotoSizesId = 'photo_sizes_id'\n}\n\n/** input type for updating data in table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Set_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Pop_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Samp_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Sizes_Photo_Size_Array_Sum_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Update_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeId = 'photo_size_id',\n  /** column name */\n  PhotoSizesId = 'photo_sizes_id'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Sizes_Photo_Size_Array_Var_Pop_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Sizes_Photo_Size_Array_Var_Samp_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Sizes_Photo_Size_Array_Variance_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** primary key columns input for table: photo_sizes */\nexport type Photo_Sizes_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_sizes\" */\nexport enum Photo_Sizes_Select_Column {\n  /** column name */\n  Canblog = 'canblog',\n  /** column name */\n  Candownload = 'candownload',\n  /** column name */\n  Canprint = 'canprint',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeArrayId = 'photo_size_array_id'\n}\n\n/** input type for updating data in table \"photo_sizes\" */\nexport type Photo_Sizes_Set_Input = {\n  canblog?: InputMaybe<Scalars['Boolean']>;\n  candownload?: InputMaybe<Scalars['Boolean']>;\n  canprint?: InputMaybe<Scalars['Boolean']>;\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Sizes_Stddev_Fields = {\n  __typename?: 'photo_sizes_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Sizes_Stddev_Pop_Fields = {\n  __typename?: 'photo_sizes_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Sizes_Stddev_Samp_Fields = {\n  __typename?: 'photo_sizes_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Sizes_Sum_Fields = {\n  __typename?: 'photo_sizes_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_sizes\" */\nexport enum Photo_Sizes_Update_Column {\n  /** column name */\n  Canblog = 'canblog',\n  /** column name */\n  Candownload = 'candownload',\n  /** column name */\n  Canprint = 'canprint',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeArrayId = 'photo_size_array_id'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Sizes_Var_Pop_Fields = {\n  __typename?: 'photo_sizes_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Sizes_Var_Samp_Fields = {\n  __typename?: 'photo_sizes_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Sizes_Variance_Fields = {\n  __typename?: 'photo_sizes_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\nexport type Query_Root = {\n  __typename?: 'query_root';\n  /** fetch data from the table: \"album\" */\n  album: Array<Album>;\n  /** fetch aggregated fields from the table: \"album\" */\n  album_aggregate: Album_Aggregate;\n  /** fetch data from the table: \"album\" using primary key columns */\n  album_by_pk?: Maybe<Album>;\n  /** fetch data from the table: \"album_location\" */\n  album_location: Array<Album_Location>;\n  /** fetch aggregated fields from the table: \"album_location\" */\n  album_location_aggregate: Album_Location_Aggregate;\n  /** fetch data from the table: \"album_location\" using primary key columns */\n  album_location_by_pk?: Maybe<Album_Location>;\n  /** fetch data from the table: \"photo_size\" */\n  photo_size: Array<Photo_Size>;\n  /** fetch aggregated fields from the table: \"photo_size\" */\n  photo_size_aggregate: Photo_Size_Aggregate;\n  /** fetch data from the table: \"photo_size\" using primary key columns */\n  photo_size_by_pk?: Maybe<Photo_Size>;\n  /** fetch data from the table: \"photo_sizes\" */\n  photo_sizes: Array<Photo_Sizes>;\n  /** fetch aggregated fields from the table: \"photo_sizes\" */\n  photo_sizes_aggregate: Photo_Sizes_Aggregate;\n  /** fetch data from the table: \"photo_sizes\" using primary key columns */\n  photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array: Array<Photo_Sizes_Photo_Size_Array>;\n  /** fetch aggregated fields from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array_aggregate: Photo_Sizes_Photo_Size_Array_Aggregate;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" using primary key columns */\n  photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\nexport type Query_RootAlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootAlbum_LocationArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_Location_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_SizeArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Size_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_SizesArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_ArrayArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\nexport type Subscription_Root = {\n  __typename?: 'subscription_root';\n  /** fetch data from the table: \"album\" */\n  album: Array<Album>;\n  /** fetch aggregated fields from the table: \"album\" */\n  album_aggregate: Album_Aggregate;\n  /** fetch data from the table: \"album\" using primary key columns */\n  album_by_pk?: Maybe<Album>;\n  /** fetch data from the table: \"album_location\" */\n  album_location: Array<Album_Location>;\n  /** fetch aggregated fields from the table: \"album_location\" */\n  album_location_aggregate: Album_Location_Aggregate;\n  /** fetch data from the table: \"album_location\" using primary key columns */\n  album_location_by_pk?: Maybe<Album_Location>;\n  /** fetch data from the table: \"photo_size\" */\n  photo_size: Array<Photo_Size>;\n  /** fetch aggregated fields from the table: \"photo_size\" */\n  photo_size_aggregate: Photo_Size_Aggregate;\n  /** fetch data from the table: \"photo_size\" using primary key columns */\n  photo_size_by_pk?: Maybe<Photo_Size>;\n  /** fetch data from the table: \"photo_sizes\" */\n  photo_sizes: Array<Photo_Sizes>;\n  /** fetch aggregated fields from the table: \"photo_sizes\" */\n  photo_sizes_aggregate: Photo_Sizes_Aggregate;\n  /** fetch data from the table: \"photo_sizes\" using primary key columns */\n  photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array: Array<Photo_Sizes_Photo_Size_Array>;\n  /** fetch aggregated fields from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array_aggregate: Photo_Sizes_Photo_Size_Array_Aggregate;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" using primary key columns */\n  photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\nexport type Subscription_RootAlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootAlbum_LocationArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_Location_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_SizeArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Size_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_SizesArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_ArrayArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\nexport type GetAlbumsByLocationQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAlbumsByLocationQuery = { __typename?: 'query_root', album_location: Array<{ __typename: 'album_location', id: number, name: string, description: string, modified?: boolean | null | undefined, albums: Array<{ __typename: 'album', flickr_photo_set_id?: string | null | undefined, title: string, description: string }> }> };\n\nexport type GetAlbumsByLocationPublicClientQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAlbumsByLocationPublicClientQuery = { __typename?: 'query_root', album_location: Array<{ __typename: 'album_location', id: number, name: string, description: string, modified?: boolean | null | undefined, albums: Array<{ __typename: 'album', flickr_photo_set_id?: string | null | undefined, title: string, description: string }> }> };\n\nexport const GetAlbumsByLocationDocument = gql`\n    query GetAlbumsByLocation {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: GeneratedModule\n  })\n  export class GetAlbumsByLocationGQL extends Apollo.Query<GetAlbumsByLocationQuery, GetAlbumsByLocationQueryVariables> {\n    document = GetAlbumsByLocationDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetAlbumsByLocationPublicClientDocument = gql`\n    query GetAlbumsByLocationPublicClient {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: GeneratedModule\n  })\n  export class GetAlbumsByLocationPublicClientGQL extends Apollo.Query<GetAlbumsByLocationPublicClientQuery, GetAlbumsByLocationPublicClientQueryVariables> {\n    document = GetAlbumsByLocationPublicClientDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\n\n      export interface PossibleTypesResultData {\n        possibleTypes: {\n          [key: string]: string[]\n        }\n      }\n      const result: PossibleTypesResultData = {\n  \"possibleTypes\": {}\n};\n      export default result;\n    ",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 2050,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "GetAlbumsByLocationPublicClientGQL",
            "id": "injectable-GetAlbumsByLocationPublicClientGQL-2c61f8d6cb2aeaab2e9b2c1bc137a91e9508bdc2363c4702033fa3e7e75b15db64afd1a6f81836ac2d44c4e19a387b344b26c600007db709c36efecd2f9928a1",
            "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
            "properties": [
                {
                    "name": "document",
                    "defaultValue": "GetAlbumsByLocationPublicClientDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 2078
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { gql } from 'apollo-angular';\nimport { Injectable } from '@angular/core';\nimport * as Apollo from 'apollo-angular';\nimport { GeneratedModule } from '../generated.module';\nexport type Maybe<T> = T | null;\nexport type InputMaybe<T> = Maybe<T>;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };\nexport type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  float8: any;\n};\n\n/** Boolean expression to compare columns of type \"Boolean\". All fields are combined with logical 'AND'. */\nexport type Boolean_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Boolean']>;\n  _gt?: InputMaybe<Scalars['Boolean']>;\n  _gte?: InputMaybe<Scalars['Boolean']>;\n  _in?: InputMaybe<Array<Scalars['Boolean']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['Boolean']>;\n  _lte?: InputMaybe<Scalars['Boolean']>;\n  _neq?: InputMaybe<Scalars['Boolean']>;\n  _nin?: InputMaybe<Array<Scalars['Boolean']>>;\n};\n\n/** Boolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'. */\nexport type Int_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['Int']>;\n  _gt?: InputMaybe<Scalars['Int']>;\n  _gte?: InputMaybe<Scalars['Int']>;\n  _in?: InputMaybe<Array<Scalars['Int']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['Int']>;\n  _lte?: InputMaybe<Scalars['Int']>;\n  _neq?: InputMaybe<Scalars['Int']>;\n  _nin?: InputMaybe<Array<Scalars['Int']>>;\n};\n\n/** Boolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'. */\nexport type String_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['String']>;\n  _gt?: InputMaybe<Scalars['String']>;\n  _gte?: InputMaybe<Scalars['String']>;\n  /** does the column match the given case-insensitive pattern */\n  _ilike?: InputMaybe<Scalars['String']>;\n  _in?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column match the given POSIX regular expression, case insensitive */\n  _iregex?: InputMaybe<Scalars['String']>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  /** does the column match the given pattern */\n  _like?: InputMaybe<Scalars['String']>;\n  _lt?: InputMaybe<Scalars['String']>;\n  _lte?: InputMaybe<Scalars['String']>;\n  _neq?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given case-insensitive pattern */\n  _nilike?: InputMaybe<Scalars['String']>;\n  _nin?: InputMaybe<Array<Scalars['String']>>;\n  /** does the column NOT match the given POSIX regular expression, case insensitive */\n  _niregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given pattern */\n  _nlike?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given POSIX regular expression, case sensitive */\n  _nregex?: InputMaybe<Scalars['String']>;\n  /** does the column NOT match the given SQL regular expression */\n  _nsimilar?: InputMaybe<Scalars['String']>;\n  /** does the column match the given POSIX regular expression, case sensitive */\n  _regex?: InputMaybe<Scalars['String']>;\n  /** does the column match the given SQL regular expression */\n  _similar?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type Album = {\n  __typename?: 'album';\n  /** An array relationship */\n  album_location_album: Array<Album_Location>;\n  /** An aggregate relationship */\n  album_location_album_aggregate: Album_Location_Aggregate;\n  album_location_id: Scalars['Int'];\n  description: Scalars['String'];\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num: Scalars['float8'];\n  id: Scalars['Int'];\n  title: Scalars['String'];\n};\n\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type AlbumAlbum_Location_AlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\n/**\n * Flickr photo set and Dive Inn public site location\n *\n *\n * columns and relationships of \"album\"\n *\n */\nexport type AlbumAlbum_Location_Album_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n/** aggregated selection of \"album\" */\nexport type Album_Aggregate = {\n  __typename?: 'album_aggregate';\n  aggregate?: Maybe<Album_Aggregate_Fields>;\n  nodes: Array<Album>;\n};\n\n/** aggregate fields of \"album\" */\nexport type Album_Aggregate_Fields = {\n  __typename?: 'album_aggregate_fields';\n  avg?: Maybe<Album_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Album_Max_Fields>;\n  min?: Maybe<Album_Min_Fields>;\n  stddev?: Maybe<Album_Stddev_Fields>;\n  stddev_pop?: Maybe<Album_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Album_Stddev_Samp_Fields>;\n  sum?: Maybe<Album_Sum_Fields>;\n  var_pop?: Maybe<Album_Var_Pop_Fields>;\n  var_samp?: Maybe<Album_Var_Samp_Fields>;\n  variance?: Maybe<Album_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"album\" */\nexport type Album_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Album_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"album\" */\nexport type Album_Aggregate_Order_By = {\n  avg?: InputMaybe<Album_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Album_Max_Order_By>;\n  min?: InputMaybe<Album_Min_Order_By>;\n  stddev?: InputMaybe<Album_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Album_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Album_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Album_Sum_Order_By>;\n  var_pop?: InputMaybe<Album_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Album_Var_Samp_Order_By>;\n  variance?: InputMaybe<Album_Variance_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"album\" */\nexport type Album_Arr_Rel_Insert_Input = {\n  data: Array<Album_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n/** aggregate avg on columns */\nexport type Album_Avg_Fields = {\n  __typename?: 'album_avg_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"album\" */\nexport type Album_Avg_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"album\". All fields are combined with a logical 'AND'. */\nexport type Album_Bool_Exp = {\n  _and?: InputMaybe<Array<Album_Bool_Exp>>;\n  _not?: InputMaybe<Album_Bool_Exp>;\n  _or?: InputMaybe<Array<Album_Bool_Exp>>;\n  album_location_album?: InputMaybe<Album_Location_Bool_Exp>;\n  album_location_id?: InputMaybe<Int_Comparison_Exp>;\n  description?: InputMaybe<String_Comparison_Exp>;\n  flickr_photo_set_id?: InputMaybe<String_Comparison_Exp>;\n  flickr_photo_set_id_num?: InputMaybe<Float8_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  title?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"album\" */\nexport enum Album_Constraint {\n  /** unique or primary key constraint */\n  AlbumPkey = 'album_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"album\" */\nexport type Album_Inc_Input = {\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"album\" */\nexport type Album_Insert_Input = {\n  album_location_album?: InputMaybe<Album_Location_Arr_Rel_Insert_Input>;\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_Location = {\n  __typename?: 'album_location';\n  /** An array relationship */\n  albums: Array<Album>;\n  /** An aggregate relationship */\n  albums_aggregate: Album_Aggregate;\n  description: Scalars['String'];\n  id: Scalars['Int'];\n  modified?: Maybe<Scalars['Boolean']>;\n  name: Scalars['String'];\n};\n\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_LocationAlbumsArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\n/**\n * Locations albums can be located on the Dive Inn public site\n *\n *\n * columns and relationships of \"album_location\"\n *\n */\nexport type Album_LocationAlbums_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n/** aggregated selection of \"album_location\" */\nexport type Album_Location_Aggregate = {\n  __typename?: 'album_location_aggregate';\n  aggregate?: Maybe<Album_Location_Aggregate_Fields>;\n  nodes: Array<Album_Location>;\n};\n\n/** aggregate fields of \"album_location\" */\nexport type Album_Location_Aggregate_Fields = {\n  __typename?: 'album_location_aggregate_fields';\n  avg?: Maybe<Album_Location_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Album_Location_Max_Fields>;\n  min?: Maybe<Album_Location_Min_Fields>;\n  stddev?: Maybe<Album_Location_Stddev_Fields>;\n  stddev_pop?: Maybe<Album_Location_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Album_Location_Stddev_Samp_Fields>;\n  sum?: Maybe<Album_Location_Sum_Fields>;\n  var_pop?: Maybe<Album_Location_Var_Pop_Fields>;\n  var_samp?: Maybe<Album_Location_Var_Samp_Fields>;\n  variance?: Maybe<Album_Location_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"album_location\" */\nexport type Album_Location_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Album_Location_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** order by aggregate values of table \"album_location\" */\nexport type Album_Location_Aggregate_Order_By = {\n  avg?: InputMaybe<Album_Location_Avg_Order_By>;\n  count?: InputMaybe<Order_By>;\n  max?: InputMaybe<Album_Location_Max_Order_By>;\n  min?: InputMaybe<Album_Location_Min_Order_By>;\n  stddev?: InputMaybe<Album_Location_Stddev_Order_By>;\n  stddev_pop?: InputMaybe<Album_Location_Stddev_Pop_Order_By>;\n  stddev_samp?: InputMaybe<Album_Location_Stddev_Samp_Order_By>;\n  sum?: InputMaybe<Album_Location_Sum_Order_By>;\n  var_pop?: InputMaybe<Album_Location_Var_Pop_Order_By>;\n  var_samp?: InputMaybe<Album_Location_Var_Samp_Order_By>;\n  variance?: InputMaybe<Album_Location_Variance_Order_By>;\n};\n\n/** input type for inserting array relation for remote table \"album_location\" */\nexport type Album_Location_Arr_Rel_Insert_Input = {\n  data: Array<Album_Location_Insert_Input>;\n  /** upsert condition */\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n/** aggregate avg on columns */\nexport type Album_Location_Avg_Fields = {\n  __typename?: 'album_location_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by avg() on columns of table \"album_location\" */\nexport type Album_Location_Avg_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to filter rows from the table \"album_location\". All fields are combined with a logical 'AND'. */\nexport type Album_Location_Bool_Exp = {\n  _and?: InputMaybe<Array<Album_Location_Bool_Exp>>;\n  _not?: InputMaybe<Album_Location_Bool_Exp>;\n  _or?: InputMaybe<Array<Album_Location_Bool_Exp>>;\n  albums?: InputMaybe<Album_Bool_Exp>;\n  description?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  name?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"album_location\" */\nexport enum Album_Location_Constraint {\n  /** unique or primary key constraint */\n  AlbumLocationPkey = 'album_location_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"album_location\" */\nexport type Album_Location_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"album_location\" */\nexport type Album_Location_Insert_Input = {\n  albums?: InputMaybe<Album_Arr_Rel_Insert_Input>;\n  description?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Album_Location_Max_Fields = {\n  __typename?: 'album_location_max_fields';\n  description?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** order by max() on columns of table \"album_location\" */\nexport type Album_Location_Max_Order_By = {\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Album_Location_Min_Fields = {\n  __typename?: 'album_location_min_fields';\n  description?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  name?: Maybe<Scalars['String']>;\n};\n\n/** order by min() on columns of table \"album_location\" */\nexport type Album_Location_Min_Order_By = {\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"album_location\" */\nexport type Album_Location_Mutation_Response = {\n  __typename?: 'album_location_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Album_Location>;\n};\n\n/** on_conflict condition type for table \"album_location\" */\nexport type Album_Location_On_Conflict = {\n  constraint: Album_Location_Constraint;\n  update_columns?: Array<Album_Location_Update_Column>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"album_location\". */\nexport type Album_Location_Order_By = {\n  albums_aggregate?: InputMaybe<Album_Aggregate_Order_By>;\n  description?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  name?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: album_location */\nexport type Album_Location_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"album_location\" */\nexport enum Album_Location_Select_Column {\n  /** column name */\n  Description = 'description',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** input type for updating data in table \"album_location\" */\nexport type Album_Location_Set_Input = {\n  description?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  name?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Album_Location_Stddev_Fields = {\n  __typename?: 'album_location_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Album_Location_Stddev_Pop_Fields = {\n  __typename?: 'album_location_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Pop_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Album_Location_Stddev_Samp_Fields = {\n  __typename?: 'album_location_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"album_location\" */\nexport type Album_Location_Stddev_Samp_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Album_Location_Sum_Fields = {\n  __typename?: 'album_location_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"album_location\" */\nexport type Album_Location_Sum_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** update columns of table \"album_location\" */\nexport enum Album_Location_Update_Column {\n  /** column name */\n  Description = 'description',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Name = 'name'\n}\n\n/** aggregate var_pop on columns */\nexport type Album_Location_Var_Pop_Fields = {\n  __typename?: 'album_location_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"album_location\" */\nexport type Album_Location_Var_Pop_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Album_Location_Var_Samp_Fields = {\n  __typename?: 'album_location_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"album_location\" */\nexport type Album_Location_Var_Samp_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Album_Location_Variance_Fields = {\n  __typename?: 'album_location_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"album_location\" */\nexport type Album_Location_Variance_Order_By = {\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate max on columns */\nexport type Album_Max_Fields = {\n  __typename?: 'album_max_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** order by max() on columns of table \"album\" */\nexport type Album_Max_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** aggregate min on columns */\nexport type Album_Min_Fields = {\n  __typename?: 'album_min_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  description?: Maybe<Scalars['String']>;\n  flickr_photo_set_id?: Maybe<Scalars['String']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n  title?: Maybe<Scalars['String']>;\n};\n\n/** order by min() on columns of table \"album\" */\nexport type Album_Min_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** response of any mutation on the table \"album\" */\nexport type Album_Mutation_Response = {\n  __typename?: 'album_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Album>;\n};\n\n/** on_conflict condition type for table \"album\" */\nexport type Album_On_Conflict = {\n  constraint: Album_Constraint;\n  update_columns?: Array<Album_Update_Column>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"album\". */\nexport type Album_Order_By = {\n  album_location_album_aggregate?: InputMaybe<Album_Location_Aggregate_Order_By>;\n  album_location_id?: InputMaybe<Order_By>;\n  description?: InputMaybe<Order_By>;\n  flickr_photo_set_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  title?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: album */\nexport type Album_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"album\" */\nexport enum Album_Select_Column {\n  /** column name */\n  AlbumLocationId = 'album_location_id',\n  /** column name */\n  Description = 'description',\n  /** column name */\n  FlickrPhotoSetId = 'flickr_photo_set_id',\n  /** column name */\n  FlickrPhotoSetIdNum = 'flickr_photo_set_id_num',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Title = 'title'\n}\n\n/** input type for updating data in table \"album\" */\nexport type Album_Set_Input = {\n  album_location_id?: InputMaybe<Scalars['Int']>;\n  description?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id?: InputMaybe<Scalars['String']>;\n  flickr_photo_set_id_num?: InputMaybe<Scalars['float8']>;\n  id?: InputMaybe<Scalars['Int']>;\n  title?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Album_Stddev_Fields = {\n  __typename?: 'album_stddev_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev() on columns of table \"album\" */\nexport type Album_Stddev_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Album_Stddev_Pop_Fields = {\n  __typename?: 'album_stddev_pop_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_pop() on columns of table \"album\" */\nexport type Album_Stddev_Pop_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Album_Stddev_Samp_Fields = {\n  __typename?: 'album_stddev_samp_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by stddev_samp() on columns of table \"album\" */\nexport type Album_Stddev_Samp_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate sum on columns */\nexport type Album_Sum_Fields = {\n  __typename?: 'album_sum_fields';\n  album_location_id?: Maybe<Scalars['Int']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['float8']>;\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** order by sum() on columns of table \"album\" */\nexport type Album_Sum_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** update columns of table \"album\" */\nexport enum Album_Update_Column {\n  /** column name */\n  AlbumLocationId = 'album_location_id',\n  /** column name */\n  Description = 'description',\n  /** column name */\n  FlickrPhotoSetId = 'flickr_photo_set_id',\n  /** column name */\n  FlickrPhotoSetIdNum = 'flickr_photo_set_id_num',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Title = 'title'\n}\n\n/** aggregate var_pop on columns */\nexport type Album_Var_Pop_Fields = {\n  __typename?: 'album_var_pop_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_pop() on columns of table \"album\" */\nexport type Album_Var_Pop_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate var_samp on columns */\nexport type Album_Var_Samp_Fields = {\n  __typename?: 'album_var_samp_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by var_samp() on columns of table \"album\" */\nexport type Album_Var_Samp_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** aggregate variance on columns */\nexport type Album_Variance_Fields = {\n  __typename?: 'album_variance_fields';\n  album_location_id?: Maybe<Scalars['Float']>;\n  flickr_photo_set_id_num?: Maybe<Scalars['Float']>;\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** order by variance() on columns of table \"album\" */\nexport type Album_Variance_Order_By = {\n  album_location_id?: InputMaybe<Order_By>;\n  flickr_photo_set_id_num?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n};\n\n/** Boolean expression to compare columns of type \"float8\". All fields are combined with logical 'AND'. */\nexport type Float8_Comparison_Exp = {\n  _eq?: InputMaybe<Scalars['float8']>;\n  _gt?: InputMaybe<Scalars['float8']>;\n  _gte?: InputMaybe<Scalars['float8']>;\n  _in?: InputMaybe<Array<Scalars['float8']>>;\n  _is_null?: InputMaybe<Scalars['Boolean']>;\n  _lt?: InputMaybe<Scalars['float8']>;\n  _lte?: InputMaybe<Scalars['float8']>;\n  _neq?: InputMaybe<Scalars['float8']>;\n  _nin?: InputMaybe<Array<Scalars['float8']>>;\n};\n\n/** mutation root */\nexport type Mutation_Root = {\n  __typename?: 'mutation_root';\n  /** delete data from the table: \"album\" */\n  delete_album?: Maybe<Album_Mutation_Response>;\n  /** delete single row from the table: \"album\" */\n  delete_album_by_pk?: Maybe<Album>;\n  /** delete data from the table: \"album_location\" */\n  delete_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** delete single row from the table: \"album_location\" */\n  delete_album_location_by_pk?: Maybe<Album_Location>;\n  /** delete data from the table: \"photo_size\" */\n  delete_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** delete single row from the table: \"photo_size\" */\n  delete_photo_size_by_pk?: Maybe<Photo_Size>;\n  /** delete data from the table: \"photo_sizes\" */\n  delete_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** delete single row from the table: \"photo_sizes\" */\n  delete_photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** delete data from the table: \"photo_sizes_photo_size_array\" */\n  delete_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** delete single row from the table: \"photo_sizes_photo_size_array\" */\n  delete_photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n  /** insert data into the table: \"album\" */\n  insert_album?: Maybe<Album_Mutation_Response>;\n  /** insert data into the table: \"album_location\" */\n  insert_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** insert a single row into the table: \"album_location\" */\n  insert_album_location_one?: Maybe<Album_Location>;\n  /** insert a single row into the table: \"album\" */\n  insert_album_one?: Maybe<Album>;\n  /** insert data into the table: \"photo_size\" */\n  insert_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** insert a single row into the table: \"photo_size\" */\n  insert_photo_size_one?: Maybe<Photo_Size>;\n  /** insert data into the table: \"photo_sizes\" */\n  insert_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** insert a single row into the table: \"photo_sizes\" */\n  insert_photo_sizes_one?: Maybe<Photo_Sizes>;\n  /** insert data into the table: \"photo_sizes_photo_size_array\" */\n  insert_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** insert a single row into the table: \"photo_sizes_photo_size_array\" */\n  insert_photo_sizes_photo_size_array_one?: Maybe<Photo_Sizes_Photo_Size_Array>;\n  /** update data of the table: \"album\" */\n  update_album?: Maybe<Album_Mutation_Response>;\n  /** update single row of the table: \"album\" */\n  update_album_by_pk?: Maybe<Album>;\n  /** update data of the table: \"album_location\" */\n  update_album_location?: Maybe<Album_Location_Mutation_Response>;\n  /** update single row of the table: \"album_location\" */\n  update_album_location_by_pk?: Maybe<Album_Location>;\n  /** update data of the table: \"photo_size\" */\n  update_photo_size?: Maybe<Photo_Size_Mutation_Response>;\n  /** update single row of the table: \"photo_size\" */\n  update_photo_size_by_pk?: Maybe<Photo_Size>;\n  /** update data of the table: \"photo_sizes\" */\n  update_photo_sizes?: Maybe<Photo_Sizes_Mutation_Response>;\n  /** update single row of the table: \"photo_sizes\" */\n  update_photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** update data of the table: \"photo_sizes_photo_size_array\" */\n  update_photo_sizes_photo_size_array?: Maybe<Photo_Sizes_Photo_Size_Array_Mutation_Response>;\n  /** update single row of the table: \"photo_sizes_photo_size_array\" */\n  update_photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_AlbumArgs = {\n  where: Album_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_LocationArgs = {\n  where: Album_Location_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Album_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_SizeArgs = {\n  where: Photo_Size_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_SizesArgs = {\n  where: Photo_Sizes_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_Photo_Size_ArrayArgs = {\n  where: Photo_Sizes_Photo_Size_Array_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootDelete_Photo_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_AlbumArgs = {\n  objects: Array<Album_Insert_Input>;\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_LocationArgs = {\n  objects: Array<Album_Location_Insert_Input>;\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_Location_OneArgs = {\n  object: Album_Location_Insert_Input;\n  on_conflict?: InputMaybe<Album_Location_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Album_OneArgs = {\n  object: Album_Insert_Input;\n  on_conflict?: InputMaybe<Album_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_SizeArgs = {\n  objects: Array<Photo_Size_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Size_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Size_OneArgs = {\n  object: Photo_Size_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Size_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_SizesArgs = {\n  objects: Array<Photo_Sizes_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Sizes_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_OneArgs = {\n  object: Photo_Sizes_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Sizes_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_Photo_Size_ArrayArgs = {\n  objects: Array<Photo_Sizes_Photo_Size_Array_Insert_Input>;\n  on_conflict?: InputMaybe<Photo_Sizes_Photo_Size_Array_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootInsert_Photo_Sizes_Photo_Size_Array_OneArgs = {\n  object: Photo_Sizes_Photo_Size_Array_Insert_Input;\n  on_conflict?: InputMaybe<Photo_Sizes_Photo_Size_Array_On_Conflict>;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_AlbumArgs = {\n  _inc?: InputMaybe<Album_Inc_Input>;\n  _set?: InputMaybe<Album_Set_Input>;\n  where: Album_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_By_PkArgs = {\n  _inc?: InputMaybe<Album_Inc_Input>;\n  _set?: InputMaybe<Album_Set_Input>;\n  pk_columns: Album_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_LocationArgs = {\n  _inc?: InputMaybe<Album_Location_Inc_Input>;\n  _set?: InputMaybe<Album_Location_Set_Input>;\n  where: Album_Location_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Album_Location_By_PkArgs = {\n  _inc?: InputMaybe<Album_Location_Inc_Input>;\n  _set?: InputMaybe<Album_Location_Set_Input>;\n  pk_columns: Album_Location_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_SizeArgs = {\n  _inc?: InputMaybe<Photo_Size_Inc_Input>;\n  _set?: InputMaybe<Photo_Size_Set_Input>;\n  where: Photo_Size_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Size_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Size_Inc_Input>;\n  _set?: InputMaybe<Photo_Size_Set_Input>;\n  pk_columns: Photo_Size_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_SizesArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Set_Input>;\n  where: Photo_Sizes_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Set_Input>;\n  pk_columns: Photo_Sizes_Pk_Columns_Input;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_Photo_Size_ArrayArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Photo_Size_Array_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Photo_Size_Array_Set_Input>;\n  where: Photo_Sizes_Photo_Size_Array_Bool_Exp;\n};\n\n\n/** mutation root */\nexport type Mutation_RootUpdate_Photo_Sizes_Photo_Size_Array_By_PkArgs = {\n  _inc?: InputMaybe<Photo_Sizes_Photo_Size_Array_Inc_Input>;\n  _set?: InputMaybe<Photo_Sizes_Photo_Size_Array_Set_Input>;\n  pk_columns: Photo_Sizes_Photo_Size_Array_Pk_Columns_Input;\n};\n\n/** column ordering options */\nexport enum Order_By {\n  /** in ascending order, nulls last */\n  Asc = 'asc',\n  /** in ascending order, nulls first */\n  AscNullsFirst = 'asc_nulls_first',\n  /** in ascending order, nulls last */\n  AscNullsLast = 'asc_nulls_last',\n  /** in descending order, nulls first */\n  Desc = 'desc',\n  /** in descending order, nulls first */\n  DescNullsFirst = 'desc_nulls_first',\n  /** in descending order, nulls last */\n  DescNullsLast = 'desc_nulls_last'\n}\n\n/**\n * Flickr Album Photo Data\n *\n *\n * columns and relationships of \"photo_size\"\n *\n */\nexport type Photo_Size = {\n  __typename?: 'photo_size';\n  height?: Maybe<Scalars['String']>;\n  id: Scalars['Int'];\n  label: Scalars['String'];\n  media?: Maybe<Scalars['String']>;\n  source: Scalars['String'];\n  width?: Maybe<Scalars['String']>;\n};\n\n/** aggregated selection of \"photo_size\" */\nexport type Photo_Size_Aggregate = {\n  __typename?: 'photo_size_aggregate';\n  aggregate?: Maybe<Photo_Size_Aggregate_Fields>;\n  nodes: Array<Photo_Size>;\n};\n\n/** aggregate fields of \"photo_size\" */\nexport type Photo_Size_Aggregate_Fields = {\n  __typename?: 'photo_size_aggregate_fields';\n  avg?: Maybe<Photo_Size_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Size_Max_Fields>;\n  min?: Maybe<Photo_Size_Min_Fields>;\n  stddev?: Maybe<Photo_Size_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Size_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Size_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Size_Sum_Fields>;\n  var_pop?: Maybe<Photo_Size_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Size_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Size_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_size\" */\nexport type Photo_Size_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Size_Avg_Fields = {\n  __typename?: 'photo_size_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_size\". All fields are combined with a logical 'AND'. */\nexport type Photo_Size_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Size_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Size_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Size_Bool_Exp>>;\n  height?: InputMaybe<String_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  label?: InputMaybe<String_Comparison_Exp>;\n  media?: InputMaybe<String_Comparison_Exp>;\n  source?: InputMaybe<String_Comparison_Exp>;\n  width?: InputMaybe<String_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_size\" */\nexport enum Photo_Size_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizeIdKey = 'photo_size_id_key',\n  /** unique or primary key constraint */\n  PhotoSizePkey = 'photo_size_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_size\" */\nexport type Photo_Size_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_size\" */\nexport type Photo_Size_Insert_Input = {\n  height?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  label?: InputMaybe<Scalars['String']>;\n  media?: InputMaybe<Scalars['String']>;\n  source?: InputMaybe<Scalars['String']>;\n  width?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Size_Max_Fields = {\n  __typename?: 'photo_size_max_fields';\n  height?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  media?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['String']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Size_Min_Fields = {\n  __typename?: 'photo_size_min_fields';\n  height?: Maybe<Scalars['String']>;\n  id?: Maybe<Scalars['Int']>;\n  label?: Maybe<Scalars['String']>;\n  media?: Maybe<Scalars['String']>;\n  source?: Maybe<Scalars['String']>;\n  width?: Maybe<Scalars['String']>;\n};\n\n/** response of any mutation on the table \"photo_size\" */\nexport type Photo_Size_Mutation_Response = {\n  __typename?: 'photo_size_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Size>;\n};\n\n/** on_conflict condition type for table \"photo_size\" */\nexport type Photo_Size_On_Conflict = {\n  constraint: Photo_Size_Constraint;\n  update_columns?: Array<Photo_Size_Update_Column>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_size\". */\nexport type Photo_Size_Order_By = {\n  height?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  label?: InputMaybe<Order_By>;\n  media?: InputMaybe<Order_By>;\n  source?: InputMaybe<Order_By>;\n  width?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: photo_size */\nexport type Photo_Size_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_size\" */\nexport enum Photo_Size_Select_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Label = 'label',\n  /** column name */\n  Media = 'media',\n  /** column name */\n  Source = 'source',\n  /** column name */\n  Width = 'width'\n}\n\n/** input type for updating data in table \"photo_size\" */\nexport type Photo_Size_Set_Input = {\n  height?: InputMaybe<Scalars['String']>;\n  id?: InputMaybe<Scalars['Int']>;\n  label?: InputMaybe<Scalars['String']>;\n  media?: InputMaybe<Scalars['String']>;\n  source?: InputMaybe<Scalars['String']>;\n  width?: InputMaybe<Scalars['String']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Size_Stddev_Fields = {\n  __typename?: 'photo_size_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Size_Stddev_Pop_Fields = {\n  __typename?: 'photo_size_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Size_Stddev_Samp_Fields = {\n  __typename?: 'photo_size_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Size_Sum_Fields = {\n  __typename?: 'photo_size_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_size\" */\nexport enum Photo_Size_Update_Column {\n  /** column name */\n  Height = 'height',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  Label = 'label',\n  /** column name */\n  Media = 'media',\n  /** column name */\n  Source = 'source',\n  /** column name */\n  Width = 'width'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Size_Var_Pop_Fields = {\n  __typename?: 'photo_size_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Size_Var_Samp_Fields = {\n  __typename?: 'photo_size_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Size_Variance_Fields = {\n  __typename?: 'photo_size_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n};\n\n/**\n * Collection of PhotoSize\n *\n *\n * columns and relationships of \"photo_sizes\"\n *\n */\nexport type Photo_Sizes = {\n  __typename?: 'photo_sizes';\n  canblog: Scalars['Boolean'];\n  candownload: Scalars['Boolean'];\n  canprint: Scalars['Boolean'];\n  id: Scalars['Int'];\n  photo_size_array_id: Scalars['Int'];\n};\n\n/** aggregated selection of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate = {\n  __typename?: 'photo_sizes_aggregate';\n  aggregate?: Maybe<Photo_Sizes_Aggregate_Fields>;\n  nodes: Array<Photo_Sizes>;\n};\n\n/** aggregate fields of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate_Fields = {\n  __typename?: 'photo_sizes_aggregate_fields';\n  avg?: Maybe<Photo_Sizes_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Sizes_Max_Fields>;\n  min?: Maybe<Photo_Sizes_Min_Fields>;\n  stddev?: Maybe<Photo_Sizes_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Sizes_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Sizes_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Sizes_Sum_Fields>;\n  var_pop?: Maybe<Photo_Sizes_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Sizes_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Sizes_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_sizes\" */\nexport type Photo_Sizes_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Sizes_Avg_Fields = {\n  __typename?: 'photo_sizes_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_sizes\". All fields are combined with a logical 'AND'. */\nexport type Photo_Sizes_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Sizes_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Sizes_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Sizes_Bool_Exp>>;\n  canblog?: InputMaybe<Boolean_Comparison_Exp>;\n  candownload?: InputMaybe<Boolean_Comparison_Exp>;\n  canprint?: InputMaybe<Boolean_Comparison_Exp>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  photo_size_array_id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_sizes\" */\nexport enum Photo_Sizes_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizesPkey = 'photo_sizes_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_sizes\" */\nexport type Photo_Sizes_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_sizes\" */\nexport type Photo_Sizes_Insert_Input = {\n  canblog?: InputMaybe<Scalars['Boolean']>;\n  candownload?: InputMaybe<Scalars['Boolean']>;\n  canprint?: InputMaybe<Scalars['Boolean']>;\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Sizes_Max_Fields = {\n  __typename?: 'photo_sizes_max_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Sizes_Min_Fields = {\n  __typename?: 'photo_sizes_min_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** response of any mutation on the table \"photo_sizes\" */\nexport type Photo_Sizes_Mutation_Response = {\n  __typename?: 'photo_sizes_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Sizes>;\n};\n\n/** on_conflict condition type for table \"photo_sizes\" */\nexport type Photo_Sizes_On_Conflict = {\n  constraint: Photo_Sizes_Constraint;\n  update_columns?: Array<Photo_Sizes_Update_Column>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_sizes\". */\nexport type Photo_Sizes_Order_By = {\n  canblog?: InputMaybe<Order_By>;\n  candownload?: InputMaybe<Order_By>;\n  canprint?: InputMaybe<Order_By>;\n  id?: InputMaybe<Order_By>;\n  photo_size_array_id?: InputMaybe<Order_By>;\n};\n\n/**\n * Array of photo_size for photo_sizes\n *\n *\n * columns and relationships of \"photo_sizes_photo_size_array\"\n *\n */\nexport type Photo_Sizes_Photo_Size_Array = {\n  __typename?: 'photo_sizes_photo_size_array';\n  id: Scalars['Int'];\n  photo_size_id: Scalars['Int'];\n  photo_sizes_id: Scalars['Int'];\n};\n\n/** aggregated selection of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate = {\n  __typename?: 'photo_sizes_photo_size_array_aggregate';\n  aggregate?: Maybe<Photo_Sizes_Photo_Size_Array_Aggregate_Fields>;\n  nodes: Array<Photo_Sizes_Photo_Size_Array>;\n};\n\n/** aggregate fields of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_aggregate_fields';\n  avg?: Maybe<Photo_Sizes_Photo_Size_Array_Avg_Fields>;\n  count: Scalars['Int'];\n  max?: Maybe<Photo_Sizes_Photo_Size_Array_Max_Fields>;\n  min?: Maybe<Photo_Sizes_Photo_Size_Array_Min_Fields>;\n  stddev?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Fields>;\n  stddev_pop?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Pop_Fields>;\n  stddev_samp?: Maybe<Photo_Sizes_Photo_Size_Array_Stddev_Samp_Fields>;\n  sum?: Maybe<Photo_Sizes_Photo_Size_Array_Sum_Fields>;\n  var_pop?: Maybe<Photo_Sizes_Photo_Size_Array_Var_Pop_Fields>;\n  var_samp?: Maybe<Photo_Sizes_Photo_Size_Array_Var_Samp_Fields>;\n  variance?: Maybe<Photo_Sizes_Photo_Size_Array_Variance_Fields>;\n};\n\n\n/** aggregate fields of \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Aggregate_FieldsCountArgs = {\n  columns?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  distinct?: InputMaybe<Scalars['Boolean']>;\n};\n\n/** aggregate avg on columns */\nexport type Photo_Sizes_Photo_Size_Array_Avg_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_avg_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** Boolean expression to filter rows from the table \"photo_sizes_photo_size_array\". All fields are combined with a logical 'AND'. */\nexport type Photo_Sizes_Photo_Size_Array_Bool_Exp = {\n  _and?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Bool_Exp>>;\n  _not?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n  _or?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Bool_Exp>>;\n  id?: InputMaybe<Int_Comparison_Exp>;\n  photo_size_id?: InputMaybe<Int_Comparison_Exp>;\n  photo_sizes_id?: InputMaybe<Int_Comparison_Exp>;\n};\n\n/** unique or primary key constraints on table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Constraint {\n  /** unique or primary key constraint */\n  PhotoSizesPhotoSizeArrayPkey = 'photo_sizes_photo_size_array_pkey'\n}\n\n/** input type for incrementing numeric columns in table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Inc_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** input type for inserting data into table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Insert_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate max on columns */\nexport type Photo_Sizes_Photo_Size_Array_Max_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_max_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** aggregate min on columns */\nexport type Photo_Sizes_Photo_Size_Array_Min_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_min_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** response of any mutation on the table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Mutation_Response = {\n  __typename?: 'photo_sizes_photo_size_array_mutation_response';\n  /** number of rows affected by the mutation */\n  affected_rows: Scalars['Int'];\n  /** data from the rows affected by the mutation */\n  returning: Array<Photo_Sizes_Photo_Size_Array>;\n};\n\n/** on_conflict condition type for table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_On_Conflict = {\n  constraint: Photo_Sizes_Photo_Size_Array_Constraint;\n  update_columns?: Array<Photo_Sizes_Photo_Size_Array_Update_Column>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n/** Ordering options when selecting data from \"photo_sizes_photo_size_array\". */\nexport type Photo_Sizes_Photo_Size_Array_Order_By = {\n  id?: InputMaybe<Order_By>;\n  photo_size_id?: InputMaybe<Order_By>;\n  photo_sizes_id?: InputMaybe<Order_By>;\n};\n\n/** primary key columns input for table: photo_sizes_photo_size_array */\nexport type Photo_Sizes_Photo_Size_Array_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Select_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeId = 'photo_size_id',\n  /** column name */\n  PhotoSizesId = 'photo_sizes_id'\n}\n\n/** input type for updating data in table \"photo_sizes_photo_size_array\" */\nexport type Photo_Sizes_Photo_Size_Array_Set_Input = {\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_id?: InputMaybe<Scalars['Int']>;\n  photo_sizes_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Pop_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Sizes_Photo_Size_Array_Stddev_Samp_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Sizes_Photo_Size_Array_Sum_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_id?: Maybe<Scalars['Int']>;\n  photo_sizes_id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_sizes_photo_size_array\" */\nexport enum Photo_Sizes_Photo_Size_Array_Update_Column {\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeId = 'photo_size_id',\n  /** column name */\n  PhotoSizesId = 'photo_sizes_id'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Sizes_Photo_Size_Array_Var_Pop_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Sizes_Photo_Size_Array_Var_Samp_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Sizes_Photo_Size_Array_Variance_Fields = {\n  __typename?: 'photo_sizes_photo_size_array_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_id?: Maybe<Scalars['Float']>;\n  photo_sizes_id?: Maybe<Scalars['Float']>;\n};\n\n/** primary key columns input for table: photo_sizes */\nexport type Photo_Sizes_Pk_Columns_Input = {\n  id: Scalars['Int'];\n};\n\n/** select columns of table \"photo_sizes\" */\nexport enum Photo_Sizes_Select_Column {\n  /** column name */\n  Canblog = 'canblog',\n  /** column name */\n  Candownload = 'candownload',\n  /** column name */\n  Canprint = 'canprint',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeArrayId = 'photo_size_array_id'\n}\n\n/** input type for updating data in table \"photo_sizes\" */\nexport type Photo_Sizes_Set_Input = {\n  canblog?: InputMaybe<Scalars['Boolean']>;\n  candownload?: InputMaybe<Scalars['Boolean']>;\n  canprint?: InputMaybe<Scalars['Boolean']>;\n  id?: InputMaybe<Scalars['Int']>;\n  photo_size_array_id?: InputMaybe<Scalars['Int']>;\n};\n\n/** aggregate stddev on columns */\nexport type Photo_Sizes_Stddev_Fields = {\n  __typename?: 'photo_sizes_stddev_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_pop on columns */\nexport type Photo_Sizes_Stddev_Pop_Fields = {\n  __typename?: 'photo_sizes_stddev_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate stddev_samp on columns */\nexport type Photo_Sizes_Stddev_Samp_Fields = {\n  __typename?: 'photo_sizes_stddev_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate sum on columns */\nexport type Photo_Sizes_Sum_Fields = {\n  __typename?: 'photo_sizes_sum_fields';\n  id?: Maybe<Scalars['Int']>;\n  photo_size_array_id?: Maybe<Scalars['Int']>;\n};\n\n/** update columns of table \"photo_sizes\" */\nexport enum Photo_Sizes_Update_Column {\n  /** column name */\n  Canblog = 'canblog',\n  /** column name */\n  Candownload = 'candownload',\n  /** column name */\n  Canprint = 'canprint',\n  /** column name */\n  Id = 'id',\n  /** column name */\n  PhotoSizeArrayId = 'photo_size_array_id'\n}\n\n/** aggregate var_pop on columns */\nexport type Photo_Sizes_Var_Pop_Fields = {\n  __typename?: 'photo_sizes_var_pop_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate var_samp on columns */\nexport type Photo_Sizes_Var_Samp_Fields = {\n  __typename?: 'photo_sizes_var_samp_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\n/** aggregate variance on columns */\nexport type Photo_Sizes_Variance_Fields = {\n  __typename?: 'photo_sizes_variance_fields';\n  id?: Maybe<Scalars['Float']>;\n  photo_size_array_id?: Maybe<Scalars['Float']>;\n};\n\nexport type Query_Root = {\n  __typename?: 'query_root';\n  /** fetch data from the table: \"album\" */\n  album: Array<Album>;\n  /** fetch aggregated fields from the table: \"album\" */\n  album_aggregate: Album_Aggregate;\n  /** fetch data from the table: \"album\" using primary key columns */\n  album_by_pk?: Maybe<Album>;\n  /** fetch data from the table: \"album_location\" */\n  album_location: Array<Album_Location>;\n  /** fetch aggregated fields from the table: \"album_location\" */\n  album_location_aggregate: Album_Location_Aggregate;\n  /** fetch data from the table: \"album_location\" using primary key columns */\n  album_location_by_pk?: Maybe<Album_Location>;\n  /** fetch data from the table: \"photo_size\" */\n  photo_size: Array<Photo_Size>;\n  /** fetch aggregated fields from the table: \"photo_size\" */\n  photo_size_aggregate: Photo_Size_Aggregate;\n  /** fetch data from the table: \"photo_size\" using primary key columns */\n  photo_size_by_pk?: Maybe<Photo_Size>;\n  /** fetch data from the table: \"photo_sizes\" */\n  photo_sizes: Array<Photo_Sizes>;\n  /** fetch aggregated fields from the table: \"photo_sizes\" */\n  photo_sizes_aggregate: Photo_Sizes_Aggregate;\n  /** fetch data from the table: \"photo_sizes\" using primary key columns */\n  photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array: Array<Photo_Sizes_Photo_Size_Array>;\n  /** fetch aggregated fields from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array_aggregate: Photo_Sizes_Photo_Size_Array_Aggregate;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" using primary key columns */\n  photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\nexport type Query_RootAlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootAlbum_LocationArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_Location_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Query_RootAlbum_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_SizeArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Size_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_SizesArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_ArrayArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Query_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\nexport type Subscription_Root = {\n  __typename?: 'subscription_root';\n  /** fetch data from the table: \"album\" */\n  album: Array<Album>;\n  /** fetch aggregated fields from the table: \"album\" */\n  album_aggregate: Album_Aggregate;\n  /** fetch data from the table: \"album\" using primary key columns */\n  album_by_pk?: Maybe<Album>;\n  /** fetch data from the table: \"album_location\" */\n  album_location: Array<Album_Location>;\n  /** fetch aggregated fields from the table: \"album_location\" */\n  album_location_aggregate: Album_Location_Aggregate;\n  /** fetch data from the table: \"album_location\" using primary key columns */\n  album_location_by_pk?: Maybe<Album_Location>;\n  /** fetch data from the table: \"photo_size\" */\n  photo_size: Array<Photo_Size>;\n  /** fetch aggregated fields from the table: \"photo_size\" */\n  photo_size_aggregate: Photo_Size_Aggregate;\n  /** fetch data from the table: \"photo_size\" using primary key columns */\n  photo_size_by_pk?: Maybe<Photo_Size>;\n  /** fetch data from the table: \"photo_sizes\" */\n  photo_sizes: Array<Photo_Sizes>;\n  /** fetch aggregated fields from the table: \"photo_sizes\" */\n  photo_sizes_aggregate: Photo_Sizes_Aggregate;\n  /** fetch data from the table: \"photo_sizes\" using primary key columns */\n  photo_sizes_by_pk?: Maybe<Photo_Sizes>;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array: Array<Photo_Sizes_Photo_Size_Array>;\n  /** fetch aggregated fields from the table: \"photo_sizes_photo_size_array\" */\n  photo_sizes_photo_size_array_aggregate: Photo_Sizes_Photo_Size_Array_Aggregate;\n  /** fetch data from the table: \"photo_sizes_photo_size_array\" using primary key columns */\n  photo_sizes_photo_size_array_by_pk?: Maybe<Photo_Sizes_Photo_Size_Array>;\n};\n\n\nexport type Subscription_RootAlbumArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Order_By>>;\n  where?: InputMaybe<Album_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootAlbum_LocationArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_Location_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Album_Location_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Album_Location_Order_By>>;\n  where?: InputMaybe<Album_Location_Bool_Exp>;\n};\n\n\nexport type Subscription_RootAlbum_Location_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_SizeArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Size_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Size_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Size_Order_By>>;\n  where?: InputMaybe<Photo_Size_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Size_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_SizesArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_ArrayArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs = {\n  distinct_on?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Select_Column>>;\n  limit?: InputMaybe<Scalars['Int']>;\n  offset?: InputMaybe<Scalars['Int']>;\n  order_by?: InputMaybe<Array<Photo_Sizes_Photo_Size_Array_Order_By>>;\n  where?: InputMaybe<Photo_Sizes_Photo_Size_Array_Bool_Exp>;\n};\n\n\nexport type Subscription_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs = {\n  id: Scalars['Int'];\n};\n\nexport type GetAlbumsByLocationQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAlbumsByLocationQuery = { __typename?: 'query_root', album_location: Array<{ __typename: 'album_location', id: number, name: string, description: string, modified?: boolean | null | undefined, albums: Array<{ __typename: 'album', flickr_photo_set_id?: string | null | undefined, title: string, description: string }> }> };\n\nexport type GetAlbumsByLocationPublicClientQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type GetAlbumsByLocationPublicClientQuery = { __typename?: 'query_root', album_location: Array<{ __typename: 'album_location', id: number, name: string, description: string, modified?: boolean | null | undefined, albums: Array<{ __typename: 'album', flickr_photo_set_id?: string | null | undefined, title: string, description: string }> }> };\n\nexport const GetAlbumsByLocationDocument = gql`\n    query GetAlbumsByLocation {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: GeneratedModule\n  })\n  export class GetAlbumsByLocationGQL extends Apollo.Query<GetAlbumsByLocationQuery, GetAlbumsByLocationQueryVariables> {\n    document = GetAlbumsByLocationDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\nexport const GetAlbumsByLocationPublicClientDocument = gql`\n    query GetAlbumsByLocationPublicClient {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `;\n\n  @Injectable({\n    providedIn: GeneratedModule\n  })\n  export class GetAlbumsByLocationPublicClientGQL extends Apollo.Query<GetAlbumsByLocationPublicClientQuery, GetAlbumsByLocationPublicClientQueryVariables> {\n    document = GetAlbumsByLocationPublicClientDocument;\n    \n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }\n\n      export interface PossibleTypesResultData {\n        possibleTypes: {\n          [key: string]: string[]\n        }\n      }\n      const result: PossibleTypesResultData = {\n  \"possibleTypes\": {}\n};\n      export default result;\n    ",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 2078,
                "jsdoctags": [
                    {
                        "name": "apollo",
                        "type": "Apollo.Apollo",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "GetAlbumsByLocationDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "gql`\n    query GetAlbumsByLocation {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `"
            },
            {
                "name": "GetAlbumsByLocationPublicClientDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "gql`\n    query GetAlbumsByLocationPublicClient {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `"
            },
            {
                "name": "result",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PossibleTypesResultData",
                "defaultValue": "{\n  \"possibleTypes\": {}\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Album",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Flickr photo set and Dive Inn public site location</p>\n<p>columns and relationships of &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Aggregate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregated selection of &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Aggregate_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Aggregate_FieldsCountArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Aggregate_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by aggregate values of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Arr_Rel_Insert_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for inserting array relation for remote table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Avg_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate avg on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Avg_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by avg() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Bool_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to filter rows from the table &quot;album&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Inc_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for incrementing numeric columns in table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Insert_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for inserting data into table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Locations albums can be located on the Dive Inn public site</p>\n<p>columns and relationships of &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Aggregate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregated selection of &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Aggregate_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Aggregate_FieldsCountArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Aggregate_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by aggregate values of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Arr_Rel_Insert_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for inserting array relation for remote table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Avg_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate avg on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Avg_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by avg() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Bool_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to filter rows from the table &quot;album_location&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Inc_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for incrementing numeric columns in table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Insert_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for inserting data into table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Max_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate max on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Max_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by max() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Min_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate min on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Min_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by min() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Mutation_Response",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>response of any mutation on the table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_On_Conflict",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>on_conflict condition type for table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Ordering options when selecting data from &quot;album_location&quot;.</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Pk_Columns_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>primary key columns input for table: album_location</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Set_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for updating data in table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Stddev_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Stddev_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by stddev() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Stddev_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Stddev_Pop_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by stddev_pop() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Stddev_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Stddev_Samp_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by stddev_samp() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Sum_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate sum on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Sum_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by sum() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Var_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Var_Pop_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by var_pop() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Var_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Var_Samp_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by var_samp() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Variance_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate variance on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Location_Variance_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by variance() on columns of table &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_LocationAlbums_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Locations albums can be located on the Dive Inn public site</p>\n<p>columns and relationships of &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_LocationAlbumsArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Locations albums can be located on the Dive Inn public site</p>\n<p>columns and relationships of &quot;album_location&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Max_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate max on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Max_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by max() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Min_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate min on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Min_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by min() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Mutation_Response",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>response of any mutation on the table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_On_Conflict",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>on_conflict condition type for table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Ordering options when selecting data from &quot;album&quot;.</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Pk_Columns_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>primary key columns input for table: album</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Set_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for updating data in table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Stddev_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Stddev_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by stddev() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Stddev_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Stddev_Pop_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by stddev_pop() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Stddev_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Stddev_Samp_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by stddev_samp() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Sum_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate sum on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Sum_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by sum() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Var_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Var_Pop_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by var_pop() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Var_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Var_Samp_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by var_samp() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Variance_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate variance on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Album_Variance_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>order by variance() on columns of table &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "AlbumAlbum_Location_Album_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Flickr photo set and Dive Inn public site location</p>\n<p>columns and relationships of &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "AlbumAlbum_Location_AlbumArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Flickr photo set and Dive Inn public site location</p>\n<p>columns and relationships of &quot;album&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Boolean_Comparison_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to compare columns of type &quot;Boolean&quot;. All fields are combined with logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "Exact",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "Float8_Comparison_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to compare columns of type &quot;float8&quot;. All fields are combined with logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "GetAlbumsByLocationPublicClientQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "GetAlbumsByLocationPublicClientQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "GetAlbumsByLocationQuery",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "GetAlbumsByLocationQueryVariables",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Exact<literal type>",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "InputMaybe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Maybe<T>",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Int_Comparison_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to compare columns of type &quot;Int&quot;. All fields are combined with logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "MakeMaybe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "MakeOptional",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Maybe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "T | null",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "Mutation_Root",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Album_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Album_Location_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Album_LocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_AlbumArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Photo_Size_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Photo_SizeArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Photo_Sizes_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Photo_Sizes_Photo_Size_Array_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Photo_Sizes_Photo_Size_ArrayArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootDelete_Photo_SizesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Album_Location_OneArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Album_LocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Album_OneArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_AlbumArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Photo_Size_OneArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Photo_SizeArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Photo_Sizes_OneArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Photo_Sizes_Photo_Size_Array_OneArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Photo_Sizes_Photo_Size_ArrayArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootInsert_Photo_SizesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Album_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Album_Location_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Album_LocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_AlbumArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Photo_Size_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Photo_SizeArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Photo_Sizes_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Photo_Sizes_Photo_Size_Array_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Photo_Sizes_Photo_Size_ArrayArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Mutation_RootUpdate_Photo_SizesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>mutation root</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Flickr Album Photo Data</p>\n<p>columns and relationships of &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Aggregate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregated selection of &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Aggregate_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Aggregate_FieldsCountArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Avg_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate avg on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Bool_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to filter rows from the table &quot;photo_size&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Inc_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for incrementing numeric columns in table &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Insert_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for inserting data into table &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Max_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate max on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Min_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate min on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Mutation_Response",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>response of any mutation on the table &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_On_Conflict",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>on_conflict condition type for table &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Ordering options when selecting data from &quot;photo_size&quot;.</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Pk_Columns_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>primary key columns input for table: photo_size</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Set_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for updating data in table &quot;photo_size&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Stddev_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Stddev_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Stddev_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Sum_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate sum on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Var_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Var_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Size_Variance_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate variance on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Collection of PhotoSize</p>\n<p>columns and relationships of &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Aggregate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregated selection of &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Aggregate_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Aggregate_FieldsCountArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Avg_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate avg on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Bool_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to filter rows from the table &quot;photo_sizes&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Inc_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for incrementing numeric columns in table &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Insert_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for inserting data into table &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Max_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate max on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Min_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate min on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Mutation_Response",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>response of any mutation on the table &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_On_Conflict",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>on_conflict condition type for table &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Ordering options when selecting data from &quot;photo_sizes&quot;.</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Array of photo_size for photo_sizes</p>\n<p>columns and relationships of &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Aggregate",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregated selection of &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Aggregate_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Aggregate_FieldsCountArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate fields of &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Avg_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate avg on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Bool_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to filter rows from the table &quot;photo_sizes_photo_size_array&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Inc_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for incrementing numeric columns in table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Insert_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for inserting data into table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Max_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate max on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Min_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate min on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Mutation_Response",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>response of any mutation on the table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_On_Conflict",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>on_conflict condition type for table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Order_By",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Ordering options when selecting data from &quot;photo_sizes_photo_size_array&quot;.</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Pk_Columns_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>primary key columns input for table: photo_sizes_photo_size_array</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Set_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for updating data in table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Stddev_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Stddev_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Stddev_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Sum_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate sum on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Var_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Var_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Variance_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate variance on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Pk_Columns_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>primary key columns input for table: photo_sizes</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Set_Input",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>input type for updating data in table &quot;photo_sizes&quot;</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Stddev_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Stddev_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Stddev_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate stddev_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Sum_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate sum on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Var_Pop_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_pop on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Var_Samp_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate var_samp on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Photo_Sizes_Variance_Fields",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>aggregate variance on columns</p>\n",
                "kind": 181
            },
            {
                "name": "Query_Root",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootAlbum_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootAlbum_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootAlbum_Location_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootAlbum_Location_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootAlbum_LocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootAlbumArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_Size_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_Size_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_SizeArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_Sizes_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_Sizes_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_Sizes_Photo_Size_ArrayArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Query_RootPhoto_SizesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Scalars",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>All built-in and custom scalars, mapped to their actual values</p>\n",
                "kind": 181
            },
            {
                "name": "String_Comparison_Exp",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Boolean expression to compare columns of type &quot;String&quot;. All fields are combined with logical &#39;AND&#39;.</p>\n",
                "kind": 181
            },
            {
                "name": "Subscription_Root",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootAlbum_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootAlbum_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootAlbum_Location_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootAlbum_Location_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootAlbum_LocationArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootAlbumArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_Size_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_Size_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_SizeArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_Sizes_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_Sizes_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_Sizes_Photo_Size_ArrayArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Subscription_RootPhoto_SizesArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            }
        ],
        "enumerations": [
            {
                "name": "Album_Constraint",
                "childs": [
                    {
                        "name": "AlbumPkey",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "album_pkey"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>unique or primary key constraints on table &quot;album&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Album_Location_Constraint",
                "childs": [
                    {
                        "name": "AlbumLocationPkey",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "album_location_pkey"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>unique or primary key constraints on table &quot;album_location&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Album_Location_Select_Column",
                "childs": [
                    {
                        "name": "Description",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "description"
                    },
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "Name",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "name"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>select columns of table &quot;album_location&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Album_Location_Update_Column",
                "childs": [
                    {
                        "name": "Description",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "description"
                    },
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "Name",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "name"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>update columns of table &quot;album_location&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Album_Select_Column",
                "childs": [
                    {
                        "name": "AlbumLocationId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "album_location_id"
                    },
                    {
                        "name": "Description",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "description"
                    },
                    {
                        "name": "FlickrPhotoSetId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "flickr_photo_set_id"
                    },
                    {
                        "name": "FlickrPhotoSetIdNum",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "flickr_photo_set_id_num"
                    },
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "title"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>select columns of table &quot;album&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Album_Update_Column",
                "childs": [
                    {
                        "name": "AlbumLocationId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "album_location_id"
                    },
                    {
                        "name": "Description",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "description"
                    },
                    {
                        "name": "FlickrPhotoSetId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "flickr_photo_set_id"
                    },
                    {
                        "name": "FlickrPhotoSetIdNum",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "flickr_photo_set_id_num"
                    },
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "Title",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "title"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>update columns of table &quot;album&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Order_By",
                "childs": [
                    {
                        "name": "Asc",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "asc"
                    },
                    {
                        "name": "AscNullsFirst",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "asc_nulls_first"
                    },
                    {
                        "name": "AscNullsLast",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "asc_nulls_last"
                    },
                    {
                        "name": "Desc",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "desc"
                    },
                    {
                        "name": "DescNullsFirst",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "desc_nulls_first"
                    },
                    {
                        "name": "DescNullsLast",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "desc_nulls_last"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>column ordering options</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Size_Constraint",
                "childs": [
                    {
                        "name": "PhotoSizeIdKey",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_size_id_key"
                    },
                    {
                        "name": "PhotoSizePkey",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_size_pkey"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>unique or primary key constraints on table &quot;photo_size&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Size_Select_Column",
                "childs": [
                    {
                        "name": "Height",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "height"
                    },
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "Label",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "label"
                    },
                    {
                        "name": "Media",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "media"
                    },
                    {
                        "name": "Source",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "source"
                    },
                    {
                        "name": "Width",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "width"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>select columns of table &quot;photo_size&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Size_Update_Column",
                "childs": [
                    {
                        "name": "Height",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "height"
                    },
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "Label",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "label"
                    },
                    {
                        "name": "Media",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "media"
                    },
                    {
                        "name": "Source",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "source"
                    },
                    {
                        "name": "Width",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "width"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>update columns of table &quot;photo_size&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Sizes_Constraint",
                "childs": [
                    {
                        "name": "PhotoSizesPkey",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_sizes_pkey"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>unique or primary key constraints on table &quot;photo_sizes&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Constraint",
                "childs": [
                    {
                        "name": "PhotoSizesPhotoSizeArrayPkey",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_sizes_photo_size_array_pkey"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>unique or primary key constraints on table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Select_Column",
                "childs": [
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "PhotoSizeId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_size_id"
                    },
                    {
                        "name": "PhotoSizesId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_sizes_id"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>select columns of table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Sizes_Photo_Size_Array_Update_Column",
                "childs": [
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "PhotoSizeId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_size_id"
                    },
                    {
                        "name": "PhotoSizesId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_sizes_id"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>update columns of table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Sizes_Select_Column",
                "childs": [
                    {
                        "name": "Canblog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "canblog"
                    },
                    {
                        "name": "Candownload",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "candownload"
                    },
                    {
                        "name": "Canprint",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "canprint"
                    },
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "PhotoSizeArrayId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_size_array_id"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>select columns of table &quot;photo_sizes&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            },
            {
                "name": "Photo_Sizes_Update_Column",
                "childs": [
                    {
                        "name": "Canblog",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "canblog"
                    },
                    {
                        "name": "Candownload",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "candownload"
                    },
                    {
                        "name": "Canprint",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "canprint"
                    },
                    {
                        "name": "Id",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "id"
                    },
                    {
                        "name": "PhotoSizeArrayId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "photo_size_array_id"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>update columns of table &quot;photo_sizes&quot;</p>\n",
                "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
            }
        ],
        "groupedVariables": {
            "H:/projects/dive-inn-admin/generated/graphql/graphql.ts": [
                {
                    "name": "GetAlbumsByLocationDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "gql`\n    query GetAlbumsByLocation {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `"
                },
                {
                    "name": "GetAlbumsByLocationPublicClientDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "gql`\n    query GetAlbumsByLocationPublicClient {\n  album_location {\n    __typename\n    id\n    name\n    description\n    albums {\n      __typename\n      flickr_photo_set_id\n      title\n      description\n    }\n    modified @client\n  }\n}\n    `"
                },
                {
                    "name": "result",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PossibleTypesResultData",
                    "defaultValue": "{\n  \"possibleTypes\": {}\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "H:/projects/dive-inn-admin/generated/graphql/graphql.ts": [
                {
                    "name": "Album_Constraint",
                    "childs": [
                        {
                            "name": "AlbumPkey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "album_pkey"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>unique or primary key constraints on table &quot;album&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Album_Location_Constraint",
                    "childs": [
                        {
                            "name": "AlbumLocationPkey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "album_location_pkey"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>unique or primary key constraints on table &quot;album_location&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Album_Location_Select_Column",
                    "childs": [
                        {
                            "name": "Description",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "description"
                        },
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "Name",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "name"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>select columns of table &quot;album_location&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Album_Location_Update_Column",
                    "childs": [
                        {
                            "name": "Description",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "description"
                        },
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "Name",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "name"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>update columns of table &quot;album_location&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Album_Select_Column",
                    "childs": [
                        {
                            "name": "AlbumLocationId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "album_location_id"
                        },
                        {
                            "name": "Description",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "description"
                        },
                        {
                            "name": "FlickrPhotoSetId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "flickr_photo_set_id"
                        },
                        {
                            "name": "FlickrPhotoSetIdNum",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "flickr_photo_set_id_num"
                        },
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "Title",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "title"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>select columns of table &quot;album&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Album_Update_Column",
                    "childs": [
                        {
                            "name": "AlbumLocationId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "album_location_id"
                        },
                        {
                            "name": "Description",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "description"
                        },
                        {
                            "name": "FlickrPhotoSetId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "flickr_photo_set_id"
                        },
                        {
                            "name": "FlickrPhotoSetIdNum",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "flickr_photo_set_id_num"
                        },
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "Title",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "title"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>update columns of table &quot;album&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Order_By",
                    "childs": [
                        {
                            "name": "Asc",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "asc"
                        },
                        {
                            "name": "AscNullsFirst",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "asc_nulls_first"
                        },
                        {
                            "name": "AscNullsLast",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "asc_nulls_last"
                        },
                        {
                            "name": "Desc",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "desc"
                        },
                        {
                            "name": "DescNullsFirst",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "desc_nulls_first"
                        },
                        {
                            "name": "DescNullsLast",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "desc_nulls_last"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>column ordering options</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Size_Constraint",
                    "childs": [
                        {
                            "name": "PhotoSizeIdKey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_size_id_key"
                        },
                        {
                            "name": "PhotoSizePkey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_size_pkey"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>unique or primary key constraints on table &quot;photo_size&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Size_Select_Column",
                    "childs": [
                        {
                            "name": "Height",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "height"
                        },
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "Label",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "label"
                        },
                        {
                            "name": "Media",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "media"
                        },
                        {
                            "name": "Source",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "source"
                        },
                        {
                            "name": "Width",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "width"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>select columns of table &quot;photo_size&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Size_Update_Column",
                    "childs": [
                        {
                            "name": "Height",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "height"
                        },
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "Label",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "label"
                        },
                        {
                            "name": "Media",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "media"
                        },
                        {
                            "name": "Source",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "source"
                        },
                        {
                            "name": "Width",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "width"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>update columns of table &quot;photo_size&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Sizes_Constraint",
                    "childs": [
                        {
                            "name": "PhotoSizesPkey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_sizes_pkey"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>unique or primary key constraints on table &quot;photo_sizes&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Constraint",
                    "childs": [
                        {
                            "name": "PhotoSizesPhotoSizeArrayPkey",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_sizes_photo_size_array_pkey"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>unique or primary key constraints on table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Select_Column",
                    "childs": [
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "PhotoSizeId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_size_id"
                        },
                        {
                            "name": "PhotoSizesId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_sizes_id"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>select columns of table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Update_Column",
                    "childs": [
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "PhotoSizeId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_size_id"
                        },
                        {
                            "name": "PhotoSizesId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_sizes_id"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>update columns of table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Sizes_Select_Column",
                    "childs": [
                        {
                            "name": "Canblog",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "canblog"
                        },
                        {
                            "name": "Candownload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "candownload"
                        },
                        {
                            "name": "Canprint",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "canprint"
                        },
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "PhotoSizeArrayId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_size_array_id"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>select columns of table &quot;photo_sizes&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                },
                {
                    "name": "Photo_Sizes_Update_Column",
                    "childs": [
                        {
                            "name": "Canblog",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "canblog"
                        },
                        {
                            "name": "Candownload",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "candownload"
                        },
                        {
                            "name": "Canprint",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "canprint"
                        },
                        {
                            "name": "Id",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "id"
                        },
                        {
                            "name": "PhotoSizeArrayId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "photo_size_array_id"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>update columns of table &quot;photo_sizes&quot;</p>\n",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "H:/projects/dive-inn-admin/generated/graphql/graphql.ts": [
                {
                    "name": "Album",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Flickr photo set and Dive Inn public site location</p>\n<p>columns and relationships of &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Aggregate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregated selection of &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Aggregate_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Aggregate_FieldsCountArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Aggregate_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by aggregate values of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Arr_Rel_Insert_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for inserting array relation for remote table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Avg_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate avg on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Avg_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by avg() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Bool_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to filter rows from the table &quot;album&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Inc_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for incrementing numeric columns in table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Insert_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for inserting data into table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Locations albums can be located on the Dive Inn public site</p>\n<p>columns and relationships of &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Aggregate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregated selection of &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Aggregate_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Aggregate_FieldsCountArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Aggregate_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by aggregate values of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Arr_Rel_Insert_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for inserting array relation for remote table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Avg_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate avg on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Avg_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by avg() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Bool_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to filter rows from the table &quot;album_location&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Inc_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for incrementing numeric columns in table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Insert_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for inserting data into table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Max_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate max on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Max_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by max() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Min_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate min on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Min_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by min() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Mutation_Response",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>response of any mutation on the table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_On_Conflict",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>on_conflict condition type for table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Ordering options when selecting data from &quot;album_location&quot;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Pk_Columns_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>primary key columns input for table: album_location</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Set_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for updating data in table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Stddev_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Stddev_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by stddev() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Stddev_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Stddev_Pop_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by stddev_pop() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Stddev_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Stddev_Samp_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by stddev_samp() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Sum_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate sum on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Sum_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by sum() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Var_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Var_Pop_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by var_pop() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Var_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Var_Samp_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by var_samp() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Variance_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate variance on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Location_Variance_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by variance() on columns of table &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_LocationAlbums_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Locations albums can be located on the Dive Inn public site</p>\n<p>columns and relationships of &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_LocationAlbumsArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Locations albums can be located on the Dive Inn public site</p>\n<p>columns and relationships of &quot;album_location&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Max_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate max on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Max_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by max() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Min_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate min on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Min_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by min() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Mutation_Response",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>response of any mutation on the table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_On_Conflict",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>on_conflict condition type for table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Ordering options when selecting data from &quot;album&quot;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Pk_Columns_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>primary key columns input for table: album</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Set_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for updating data in table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Stddev_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Stddev_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by stddev() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Stddev_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Stddev_Pop_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by stddev_pop() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Stddev_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Stddev_Samp_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by stddev_samp() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Sum_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate sum on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Sum_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by sum() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Var_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Var_Pop_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by var_pop() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Var_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Var_Samp_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by var_samp() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Variance_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate variance on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Album_Variance_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>order by variance() on columns of table &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "AlbumAlbum_Location_Album_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Flickr photo set and Dive Inn public site location</p>\n<p>columns and relationships of &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "AlbumAlbum_Location_AlbumArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Flickr photo set and Dive Inn public site location</p>\n<p>columns and relationships of &quot;album&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Boolean_Comparison_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to compare columns of type &quot;Boolean&quot;. All fields are combined with logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Exact",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                },
                {
                    "name": "Float8_Comparison_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to compare columns of type &quot;float8&quot;. All fields are combined with logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "GetAlbumsByLocationPublicClientQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "GetAlbumsByLocationPublicClientQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "GetAlbumsByLocationQuery",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "GetAlbumsByLocationQueryVariables",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Exact<literal type>",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "InputMaybe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Maybe<T>",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "Int_Comparison_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to compare columns of type &quot;Int&quot;. All fields are combined with logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "MakeMaybe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "MakeOptional",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "Maybe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "T | null",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "Mutation_Root",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Album_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Album_Location_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Album_LocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_AlbumArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Photo_Size_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Photo_SizeArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Photo_Sizes_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Photo_Sizes_Photo_Size_Array_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Photo_Sizes_Photo_Size_ArrayArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootDelete_Photo_SizesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Album_Location_OneArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Album_LocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Album_OneArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_AlbumArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Photo_Size_OneArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Photo_SizeArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Photo_Sizes_OneArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Photo_Sizes_Photo_Size_Array_OneArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Photo_Sizes_Photo_Size_ArrayArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootInsert_Photo_SizesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Album_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Album_Location_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Album_LocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_AlbumArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Photo_Size_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Photo_SizeArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Photo_Sizes_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Photo_Sizes_Photo_Size_Array_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Photo_Sizes_Photo_Size_ArrayArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Mutation_RootUpdate_Photo_SizesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>mutation root</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Flickr Album Photo Data</p>\n<p>columns and relationships of &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Aggregate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregated selection of &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Aggregate_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Aggregate_FieldsCountArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Avg_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate avg on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Bool_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to filter rows from the table &quot;photo_size&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Inc_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for incrementing numeric columns in table &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Insert_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for inserting data into table &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Max_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate max on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Min_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate min on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Mutation_Response",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>response of any mutation on the table &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_On_Conflict",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>on_conflict condition type for table &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Ordering options when selecting data from &quot;photo_size&quot;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Pk_Columns_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>primary key columns input for table: photo_size</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Set_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for updating data in table &quot;photo_size&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Stddev_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Stddev_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Stddev_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Sum_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate sum on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Var_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Var_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Size_Variance_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate variance on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Collection of PhotoSize</p>\n<p>columns and relationships of &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Aggregate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregated selection of &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Aggregate_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Aggregate_FieldsCountArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Avg_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate avg on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Bool_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to filter rows from the table &quot;photo_sizes&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Inc_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for incrementing numeric columns in table &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Insert_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for inserting data into table &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Max_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate max on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Min_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate min on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Mutation_Response",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>response of any mutation on the table &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_On_Conflict",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>on_conflict condition type for table &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Ordering options when selecting data from &quot;photo_sizes&quot;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Array of photo_size for photo_sizes</p>\n<p>columns and relationships of &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Aggregate",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregated selection of &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Aggregate_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Aggregate_FieldsCountArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate fields of &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Avg_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate avg on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Bool_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to filter rows from the table &quot;photo_sizes_photo_size_array&quot;. All fields are combined with a logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Inc_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for incrementing numeric columns in table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Insert_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for inserting data into table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Max_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate max on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Min_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate min on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Mutation_Response",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>response of any mutation on the table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_On_Conflict",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>on_conflict condition type for table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Order_By",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Ordering options when selecting data from &quot;photo_sizes_photo_size_array&quot;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Pk_Columns_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>primary key columns input for table: photo_sizes_photo_size_array</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Set_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for updating data in table &quot;photo_sizes_photo_size_array&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Stddev_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Stddev_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Stddev_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Sum_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate sum on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Var_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Var_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Photo_Size_Array_Variance_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate variance on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Pk_Columns_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>primary key columns input for table: photo_sizes</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Set_Input",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>input type for updating data in table &quot;photo_sizes&quot;</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Stddev_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Stddev_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Stddev_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate stddev_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Sum_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate sum on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Var_Pop_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_pop on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Var_Samp_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate var_samp on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Photo_Sizes_Variance_Fields",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>aggregate variance on columns</p>\n",
                    "kind": 181
                },
                {
                    "name": "Query_Root",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootAlbum_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootAlbum_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootAlbum_Location_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootAlbum_Location_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootAlbum_LocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootAlbumArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_Size_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_Size_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_SizeArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_Sizes_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_Sizes_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_Sizes_Photo_Size_ArrayArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Query_RootPhoto_SizesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Scalars",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>All built-in and custom scalars, mapped to their actual values</p>\n",
                    "kind": 181
                },
                {
                    "name": "String_Comparison_Exp",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Boolean expression to compare columns of type &quot;String&quot;. All fields are combined with logical &#39;AND&#39;.</p>\n",
                    "kind": 181
                },
                {
                    "name": "Subscription_Root",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootAlbum_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootAlbum_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootAlbum_Location_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootAlbum_Location_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootAlbum_LocationArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootAlbumArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_Size_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_Size_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_SizeArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_Sizes_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_Sizes_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_Sizes_Photo_Size_Array_AggregateArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_Sizes_Photo_Size_Array_By_PkArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_Sizes_Photo_Size_ArrayArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                },
                {
                    "name": "Subscription_RootPhoto_SizesArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetAlbumsByLocationGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GetAlbumsByLocationPublicClientGQL",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PossibleTypesResultData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetAlbumsByLocationDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GetAlbumsByLocationPublicClientDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "H:/projects/dive-inn-admin/generated/graphql/graphql.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "result",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}